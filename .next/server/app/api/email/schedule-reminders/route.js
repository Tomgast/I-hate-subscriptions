"use strict";(()=>{var e={};e.id=492,e.ids=[492],e.modules={72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},27790:e=>{e.exports=require("assert")},78893:e=>{e.exports=require("buffer")},61282:e=>{e.exports=require("child_process")},84770:e=>{e.exports=require("crypto")},80665:e=>{e.exports=require("dns")},17702:e=>{e.exports=require("events")},92048:e=>{e.exports=require("fs")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},98216:e=>{e.exports=require("net")},19801:e=>{e.exports=require("os")},55315:e=>{e.exports=require("path")},68621:e=>{e.exports=require("punycode")},86624:e=>{e.exports=require("querystring")},76162:e=>{e.exports=require("stream")},82452:e=>{e.exports=require("tls")},17360:e=>{e.exports=require("url")},21764:e=>{e.exports=require("util")},71568:e=>{e.exports=require("zlib")},61603:(e,r,s)=>{s.r(r),s.d(r,{originalPathname:()=>w,patchFetch:()=>D,requestAsyncStorage:()=>R,routeModule:()=>f,serverHooks:()=>y,staticGenerationAsyncStorage:()=>S});var t={};s.r(t),s.d(t,{GET:()=>h,POST:()=>g});var i=s(49303),n=s(88716),o=s(60670),a=s(87070),l=s(75571),d=s(95456),u=s(77865),c=s(23737);class m{constructor(){this.reminderLogs=new Map,this.userSettings=new Map,this.loadUserSettings(),this.loadReminderLogs()}setUserSettings(e,r){this.userSettings.set(e,r),this.saveUserSettings(),console.log(`‚öôÔ∏è Updated email settings for user ${e}`)}getUserSettings(e){return this.userSettings.get(e)||null}scheduleSubscriptionReminders(e){let r=this.getUserSettings(e.userId);if(!r||!r.emailNotifications){console.log(`üìß Email notifications disabled for user ${e.userId}`);return}c.z2.scheduleRenewalReminders(e.userId,e.userEmail,e.userEmail.split("@")[0],e.id,e.name,e.amount,e.currency,e.renewalDate,r.emailReminderDays),console.log(`üìÖ Scheduled reminders for ${e.name} (${r.emailReminderDays.join(", ")} days before)`)}async processRenewalReminders(e){let r=new Date,s=r.toISOString().split("T")[0];for(let t of(console.log(`üîÑ Processing renewal reminders for ${e.length} subscriptions...`),e)){if(!t.isActive)continue;let e=this.getUserSettings(t.userId);if(e&&e.emailNotifications)try{let i=new Date(t.renewalDate),n=Math.ceil((i.getTime()-r.getTime())/864e5);e.emailReminderDays.includes(n)&&this.shouldSendReminder(t.id,t.userId,n,e.reminderFrequency,s)&&await this.sendRenewalReminder(t,n,e),this.cleanupOldLogs(t.id,60)}catch(e){console.error(`‚ùå Error processing reminder for ${t.name}:`,e)}}}async sendRenewalReminder(e,r,s){try{let s=await u.y.sendSubscriptionReminder(e.userEmail,{userName:e.userEmail.split("@")[0],subscriptionName:e.name,amount:e.amount,currency:e.currency,renewalDate:e.renewalDate,daysUntilRenewal:r,manageUrl:`${process.env.NEXTAUTH_URL}/subscriptions/${e.id}`,cancelUrl:`${process.env.NEXTAUTH_URL}/subscriptions/${e.id}/cancel`});this.logReminder(e.id,e.userId,r,s?"sent":"failed"),s?console.log(`‚úÖ Sent ${r}-day reminder for ${e.name} to ${e.userEmail}`):console.error(`‚ùå Failed to send reminder for ${e.name}`)}catch(s){console.error(`‚ùå Error sending reminder for ${e.name}:`,s),this.logReminder(e.id,e.userId,r,"failed")}}shouldSendReminder(e,r,s,t,i){let n=this.getReminderLogs(e),o=n.filter(e=>e.sentAt.startsWith(i)&&e.reminderDay===s&&"sent"===e.status);switch(t){case"once":case"daily":return 0===o.length;case"weekly":let a=new Date;return a.setDate(a.getDate()-7),0===n.filter(e=>new Date(e.sentAt)>a&&e.reminderDay===s&&"sent"===e.status).length;default:return!1}}logReminder(e,r,s,t){let i=this.reminderLogs.get(e)||[];i.push({subscriptionId:e,userId:r,reminderDay:s,sentAt:new Date().toISOString(),type:"email",status:t}),this.reminderLogs.set(e,i),this.saveReminderLogs()}getReminderLogs(e){return this.reminderLogs.get(e)||[]}cleanupOldLogs(e,r){let s=this.reminderLogs.get(e)||[],t=new Date;t.setDate(t.getDate()-r);let i=s.filter(e=>new Date(e.sentAt)>t);i.length!==s.length&&(this.reminderLogs.set(e,i),console.log(`üóëÔ∏è Cleaned up ${s.length-i.length} old reminder logs for subscription ${e}`))}getReminderStats(e){let r,s=0,t=0,i=0;for(let[n,o]of this.reminderLogs){let n=o.filter(r=>r.userId===e);s+=n.length,t+=n.filter(e=>"sent"===e.status).length,i+=n.filter(e=>"failed"===e.status).length;let a=n.sort((e,r)=>new Date(r.sentAt).getTime()-new Date(e.sentAt).getTime())[0];a&&(!r||a.sentAt>r)&&(r=a.sentAt)}return{totalReminders:s,successfulReminders:t,failedReminders:i,lastReminderSent:r}}async sendTestReminder(e,r,s="Netflix",t=15.99,i="EUR"){let n=new Date;return n.setDate(n.getDate()+3),await u.y.sendSubscriptionReminder(e,{userName:r,subscriptionName:s,amount:t,currency:i,renewalDate:n.toISOString().split("T")[0],daysUntilRenewal:3,manageUrl:`${process.env.NEXTAUTH_URL}/dashboard`,cancelUrl:`${process.env.NEXTAUTH_URL}/help`})}loadUserSettings(){console.log("\uD83D\uDCE7 Renewal reminder service initialized")}saveUserSettings(){console.log(`üíæ Saved settings for ${this.userSettings.size} users`)}loadReminderLogs(){console.log("\uD83D\uDCCA Loaded reminder logs")}saveReminderLogs(){console.log(`üíæ Saved reminder logs for ${this.reminderLogs.size} subscriptions`)}}let p=new m;async function g(e){try{let r=await (0,l.getServerSession)(d.Lz);if(!r?.user?.email)return a.NextResponse.json({error:"Unauthorized"},{status:401});let{subscriptions:s,userSettings:t}=await e.json();if(!s||!Array.isArray(s))return a.NextResponse.json({error:"Missing or invalid subscriptions array"},{status:400});t&&p.setUserSettings(r.user.email,t);let i=0;for(let e of s)if(!1!==e.isActive){let s={...e,userId:r.user.email,userEmail:r.user.email,isActive:!0};p.scheduleSubscriptionReminders(s),i++}return a.NextResponse.json({message:`Scheduled reminders for ${i} subscriptions`,scheduledCount:i,activeCount:s.length})}catch(e){return console.error("Schedule reminders error:",e),a.NextResponse.json({error:"Internal server error"},{status:500})}}async function h(e){try{let e=await (0,l.getServerSession)(d.Lz);if(!e?.user?.email)return a.NextResponse.json({error:"Unauthorized"},{status:401});let r=p.getReminderStats(e.user.email),s=p.getUserSettings(e.user.email);return a.NextResponse.json({stats:r,settings:s,userId:e.user.email})}catch(e){return console.error("Get reminder stats error:",e),a.NextResponse.json({error:"Internal server error"},{status:500})}}let f=new i.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/email/schedule-reminders/route",pathname:"/api/email/schedule-reminders",filename:"route",bundlePath:"app/api/email/schedule-reminders/route"},resolvedPagePath:"C:\\Users\\Gebruiker\\Documents\\GitHub\\I-hate-subscriptions\\src\\app\\api\\email\\schedule-reminders\\route.ts",nextConfigOutput:"",userland:t}),{requestAsyncStorage:R,staticGenerationAsyncStorage:S,serverHooks:y}=f,w="/api/email/schedule-reminders/route";function D(){return(0,o.patchFetch)({serverHooks:y,staticGenerationAsyncStorage:S})}},23737:(e,r,s)=>{s.d(r,{z2:()=>n});var t=s(77865);class i{constructor(){this.reminders=new Map,this.loadReminders()}scheduleRenewalReminders(e,r,s,t,i,n,o,a,l=[7,3,1]){let d=`${e}_${t}`;this.reminders.set(d,{id:d,userId:e,userEmail:r,userName:s,subscriptionId:t,subscriptionName:i,amount:n,currency:o,renewalDate:a,reminderDays:l,isActive:!0}),console.log(`üìÖ Scheduled reminders for ${i} (${l.join(", ")} days before renewal)`)}cancelReminders(e,r){let s=`${e}_${r}`,t=this.reminders.get(s);t&&(t.isActive=!1,console.log(`‚ùå Cancelled reminders for ${t.subscriptionName}`))}async processDueReminders(){let e=new Date,r=e.toISOString().split("T")[0];for(let[s,i]of Array.from(this.reminders.entries()))if(i.isActive)try{let n=new Date(i.renewalDate),o=Math.ceil((n.getTime()-e.getTime())/864e5);if(i.reminderDays.includes(o)){if(i.lastSent===r)continue;await t.y.sendSubscriptionReminder(i.userEmail,{userName:i.userName,subscriptionName:i.subscriptionName,amount:i.amount,currency:i.currency,renewalDate:i.renewalDate,daysUntilRenewal:o,manageUrl:`${process.env.NEXTAUTH_URL}/subscriptions/${i.subscriptionId}`,cancelUrl:`${process.env.NEXTAUTH_URL}/subscriptions/${i.subscriptionId}/cancel`})?(i.lastSent=r,console.log(`‚úÖ Sent ${o}-day reminder for ${i.subscriptionName} to ${i.userEmail}`)):console.error(`‚ùå Failed to send reminder for ${i.subscriptionName}`)}o<-1&&(this.reminders.delete(s),console.log(`üóëÔ∏è Cleaned up expired reminder for ${i.subscriptionName}`))}catch(e){console.error(`Error processing reminder for ${i.subscriptionName}:`,e)}}getUserReminders(e){return Array.from(this.reminders.values()).filter(r=>r.userId===e&&r.isActive)}updateReminderSettings(e,r,s){let t=`${e}_${r}`,i=this.reminders.get(t);return!!i&&(i.reminderDays=s,console.log(`‚öôÔ∏è Updated reminder settings for ${i.subscriptionName}: ${s.join(", ")} days`),!0)}async sendTestReminder(e,r,s="Netflix",i=15.99,n="EUR"){let o=new Date;return o.setDate(o.getDate()+3),await t.y.sendSubscriptionReminder(e,{userName:r,subscriptionName:s,amount:i,currency:n,renewalDate:o.toISOString().split("T")[0],daysUntilRenewal:3,manageUrl:`${process.env.NEXTAUTH_URL}/dashboard`,cancelUrl:`${process.env.NEXTAUTH_URL}/help`})}loadReminders(){console.log("\uD83D\uDCE7 Email scheduler initialized")}saveReminders(){console.log(`üíæ Saved ${this.reminders.size} email reminders`)}}let n=new i}};var r=require("../../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[276,494,734,70,245,563],()=>s(61603));module.exports=t})();