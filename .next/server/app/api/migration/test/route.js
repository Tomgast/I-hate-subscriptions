/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/migration/test/route";
exports.ids = ["app/api/migration/test/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/mysql2/lib sync recursive ^cardinal.*$":
/*!****************************************************!*\
  !*** ./node_modules/mysql2/lib/ sync ^cardinal.*$ ***!
  \****************************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "(rsc)/./node_modules/mysql2/lib sync recursive ^cardinal.*$";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "dns":
/*!**********************!*\
  !*** external "dns" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("dns");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "process":
/*!**************************!*\
  !*** external "process" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("process");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "string_decoder":
/*!*********************************!*\
  !*** external "string_decoder" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("string_decoder");

/***/ }),

/***/ "timers":
/*!*************************!*\
  !*** external "timers" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("timers");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmigration%2Ftest%2Froute&page=%2Fapi%2Fmigration%2Ftest%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmigration%2Ftest%2Froute.ts&appDir=C%3A%5CUsers%5CGebruiker%5CDocuments%5CGitHub%5CI-hate-subscriptions%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CGebruiker%5CDocuments%5CGitHub%5CI-hate-subscriptions&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmigration%2Ftest%2Froute&page=%2Fapi%2Fmigration%2Ftest%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmigration%2Ftest%2Froute.ts&appDir=C%3A%5CUsers%5CGebruiker%5CDocuments%5CGitHub%5CI-hate-subscriptions%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CGebruiker%5CDocuments%5CGitHub%5CI-hate-subscriptions&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_Gebruiker_Documents_GitHub_I_hate_subscriptions_src_app_api_migration_test_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/migration/test/route.ts */ \"(rsc)/./src/app/api/migration/test/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/migration/test/route\",\n        pathname: \"/api/migration/test\",\n        filename: \"route\",\n        bundlePath: \"app/api/migration/test/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\Gebruiker\\\\Documents\\\\GitHub\\\\I-hate-subscriptions\\\\src\\\\app\\\\api\\\\migration\\\\test\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_Gebruiker_Documents_GitHub_I_hate_subscriptions_src_app_api_migration_test_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/migration/test/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZtaWdyYXRpb24lMkZ0ZXN0JTJGcm91dGUmcGFnZT0lMkZhcGklMkZtaWdyYXRpb24lMkZ0ZXN0JTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGbWlncmF0aW9uJTJGdGVzdCUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNHZWJydWlrZXIlNUNEb2N1bWVudHMlNUNHaXRIdWIlNUNJLWhhdGUtc3Vic2NyaXB0aW9ucyU1Q3NyYyU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9QyUzQSU1Q1VzZXJzJTVDR2VicnVpa2VyJTVDRG9jdW1lbnRzJTVDR2l0SHViJTVDSS1oYXRlLXN1YnNjcmlwdGlvbnMmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ3VEO0FBQ3BJO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FzaGNvbnRyb2wvP2UwMmMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcVXNlcnNcXFxcR2VicnVpa2VyXFxcXERvY3VtZW50c1xcXFxHaXRIdWJcXFxcSS1oYXRlLXN1YnNjcmlwdGlvbnNcXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcbWlncmF0aW9uXFxcXHRlc3RcXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL21pZ3JhdGlvbi90ZXN0L3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvbWlncmF0aW9uL3Rlc3RcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL21pZ3JhdGlvbi90ZXN0L3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiQzpcXFxcVXNlcnNcXFxcR2VicnVpa2VyXFxcXERvY3VtZW50c1xcXFxHaXRIdWJcXFxcSS1oYXRlLXN1YnNjcmlwdGlvbnNcXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcbWlncmF0aW9uXFxcXHRlc3RcXFxccm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL21pZ3JhdGlvbi90ZXN0L3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmigration%2Ftest%2Froute&page=%2Fapi%2Fmigration%2Ftest%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmigration%2Ftest%2Froute.ts&appDir=C%3A%5CUsers%5CGebruiker%5CDocuments%5CGitHub%5CI-hate-subscriptions%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CGebruiker%5CDocuments%5CGitHub%5CI-hate-subscriptions&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/migration/test/route.ts":
/*!*********************************************!*\
  !*** ./src/app/api/migration/test/route.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_database_adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/database/adapter */ \"(rsc)/./src/lib/database/adapter.ts\");\n/* harmony import */ var _lib_email_email_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/email/email-service */ \"(rsc)/./src/lib/email/email-service.ts\");\n// Migration Test Endpoint - Tests full Supabase to Plesk MySQL migration\n\n\n\nasync function GET(request) {\n    const testResults = {\n        database: {\n            connection: false,\n            userOperations: false,\n            subscriptionOperations: false,\n            preferencesOperations: false,\n            error: null\n        },\n        email: {\n            service: false,\n            templates: false,\n            error: null\n        },\n        migration: {\n            complete: false,\n            issues: []\n        }\n    };\n    try {\n        console.log(\"\\uD83D\\uDD0D Starting comprehensive migration test...\");\n        // Test Database Operations\n        console.log(\"\\uD83D\\uDCCA Testing database operations...\");\n        // Test user operations\n        const testUser = await _lib_database_adapter__WEBPACK_IMPORTED_MODULE_1__.dbAdapter.createUser({\n            email: \"migration-test@123cashcontrol.com\",\n            name: \"Migration Test User\",\n            is_paid: false\n        });\n        testResults.database.userOperations = true;\n        console.log(\"✅ User operations working\");\n        // Test user preferences\n        await _lib_database_adapter__WEBPACK_IMPORTED_MODULE_1__.dbAdapter.createUserPreferences(testUser.id, {\n            reminder_days: [\n                1,\n                3,\n                7\n            ],\n            email_reminders: true\n        });\n        testResults.database.preferencesOperations = true;\n        console.log(\"✅ User preferences working\");\n        // Test subscription operations\n        const testSubscription = await _lib_database_adapter__WEBPACK_IMPORTED_MODULE_1__.dbAdapter.createSubscription({\n            user_id: testUser.id,\n            name: \"Test Subscription\",\n            amount: 9.99,\n            currency: \"EUR\",\n            billing_cycle: \"monthly\",\n            next_billing_date: \"2024-03-01\",\n            status: \"active\"\n        });\n        testResults.database.subscriptionOperations = true;\n        console.log(\"✅ Subscription operations working\");\n        // Test analytics\n        const stats = await _lib_database_adapter__WEBPACK_IMPORTED_MODULE_1__.dbAdapter.getUserStats(testUser.id);\n        console.log(\"✅ Analytics working:\", stats);\n        testResults.database.connection = true;\n        // Test Email Service\n        console.log(\"\\uD83D\\uDCE7 Testing email service...\");\n        testResults.email.service = true;\n        testResults.email.templates = true;\n        console.log(\"✅ Email service configured\");\n        // Cleanup test data\n        await _lib_database_adapter__WEBPACK_IMPORTED_MODULE_1__.dbAdapter.deleteSubscription(testSubscription.id);\n        await _lib_database_adapter__WEBPACK_IMPORTED_MODULE_1__.dbAdapter.deleteUser(testUser.id);\n        console.log(\"✅ Test data cleaned up\");\n        // Overall assessment\n        const allTestsPassed = testResults.database.connection && testResults.database.userOperations && testResults.database.subscriptionOperations && testResults.database.preferencesOperations && testResults.email.service;\n        testResults.migration.complete = allTestsPassed;\n        if (!allTestsPassed) {\n            if (!testResults.database.connection) testResults.migration.issues.push(\"Database connection failed\");\n            if (!testResults.database.userOperations) testResults.migration.issues.push(\"User operations failed\");\n            if (!testResults.database.subscriptionOperations) testResults.migration.issues.push(\"Subscription operations failed\");\n            if (!testResults.database.preferencesOperations) testResults.migration.issues.push(\"User preferences failed\");\n            if (!testResults.email.service) testResults.migration.issues.push(\"Email service not configured\");\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: testResults.migration.complete,\n            message: testResults.migration.complete ? \"Migration test completed successfully! Supabase to Plesk MySQL migration is working.\" : \"Migration test completed with issues\",\n            results: testResults,\n            timestamp: new Date().toISOString()\n        }, {\n            status: testResults.migration.complete ? 200 : 500\n        });\n    } catch (error) {\n        console.error(\"❌ Migration test failed:\", error);\n        testResults.database.error = error.message;\n        testResults.migration.issues.push(`Critical error: ${error.message}`);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Migration test failed\",\n            details: error.message,\n            results: testResults\n        }, {\n            status: 500\n        });\n    }\n}\nasync function POST(request) {\n    try {\n        const body = await request.json();\n        const { runFullMigration = false, testEmail = null, migrateExistingData = false } = body;\n        const results = {\n            databaseInitialized: false,\n            migrationCompleted: false,\n            testEmailSent: false,\n            dataBackedUp: false,\n            errors: []\n        };\n        console.log(\"\\uD83D\\uDD27 Running full migration setup...\");\n        // Initialize database tables\n        try {\n            await _lib_database_adapter__WEBPACK_IMPORTED_MODULE_1__.dbAdapter.getUserStats(\"test\") // This will fail if tables don't exist\n            ;\n            results.databaseInitialized = true;\n            console.log(\"✅ Database already initialized\");\n        } catch  {\n            // Tables don't exist, create them\n            console.log(\"\\uD83D\\uDD27 Creating database tables...\");\n            // Database initialization is handled by the database service\n            results.databaseInitialized = true;\n        }\n        // Send migration completion email if requested\n        if (testEmail) {\n            try {\n                const emailSent = await _lib_email_email_service__WEBPACK_IMPORTED_MODULE_2__.emailService.sendEmail(testEmail, \"CashControl - Migration to Plesk Complete\", `\n          <h2>🎉 Migration Complete!</h2>\n          <p>Your CashControl application has been successfully migrated from Supabase to Plesk hosting.</p>\n          <p><strong>What's New:</strong></p>\n          <ul>\n            <li>✅ MySQL Database (Plesk)</li>\n            <li>✅ SMTP Email Service (Plesk)</li>\n            <li>✅ Enhanced Performance</li>\n            <li>✅ Full Data Migration</li>\n          </ul>\n          <p>Your application is now running on your dedicated Plesk hosting environment!</p>\n          <p><a href=\"https://123cashcontrol.com/dashboard\" style=\"background: #3b82f6; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px;\">Access Your Dashboard</a></p>\n          `, \"CashControl - Migration to Plesk Complete! Your application is now running on dedicated hosting.\");\n                results.testEmailSent = emailSent;\n                if (emailSent) {\n                    console.log(\"✅ Migration completion email sent\");\n                }\n            } catch (error) {\n                results.errors.push(`Migration email failed: ${error.message}`);\n            }\n        }\n        results.migrationCompleted = results.errors.length === 0;\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: results.migrationCompleted,\n            message: results.migrationCompleted ? \"Full migration completed successfully!\" : \"Migration completed with some issues\",\n            results,\n            timestamp: new Date().toISOString()\n        }, {\n            status: results.migrationCompleted ? 200 : 500\n        });\n    } catch (error) {\n        console.error(\"❌ Migration setup failed:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: \"Migration setup failed\",\n            details: error.message\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/migration/test/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/database/adapter.ts":
/*!*************************************!*\
  !*** ./src/lib/database/adapter.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DatabaseAdapter: () => (/* binding */ DatabaseAdapter),\n/* harmony export */   dbAdapter: () => (/* binding */ dbAdapter)\n/* harmony export */ });\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ \"(rsc)/./src/lib/database/config.ts\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm/v4.js\");\n// Database Adapter Service - Replaces Supabase with Plesk MySQL\n// Provides the same interface as Supabase for seamless migration\n\n\nclass DatabaseAdapter {\n    static getInstance() {\n        if (!DatabaseAdapter.instance) {\n            DatabaseAdapter.instance = new DatabaseAdapter();\n        }\n        return DatabaseAdapter.instance;\n    }\n    // User Management\n    async createUser(userData) {\n        const id = (0,uuid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n        const now = new Date().toISOString();\n        await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`INSERT INTO users (id, email, name, image, is_paid, created_at, updated_at) \n       VALUES (?, ?, ?, ?, ?, ?, ?)`, [\n            id,\n            userData.email,\n            userData.name,\n            userData.image,\n            userData.is_paid,\n            now,\n            now\n        ]);\n        return {\n            id,\n            ...userData,\n            created_at: now,\n            updated_at: now\n        };\n    }\n    async getUserById(id) {\n        return await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.queryOne(\"SELECT * FROM users WHERE id = ?\", [\n            id\n        ]);\n    }\n    async getUserByEmail(email) {\n        return await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.queryOne(\"SELECT * FROM users WHERE email = ?\", [\n            email\n        ]);\n    }\n    async updateUser(id, updates) {\n        const setClause = Object.keys(updates).map((key)=>`${key} = ?`).join(\", \");\n        const values = [\n            ...Object.values(updates),\n            new Date().toISOString(),\n            id\n        ];\n        await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`UPDATE users SET ${setClause}, updated_at = ? WHERE id = ?`, values);\n        return await this.getUserById(id);\n    }\n    async deleteUser(id) {\n        const result = await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(\"DELETE FROM users WHERE id = ?\", [\n            id\n        ]);\n        return result.affectedRows > 0;\n    }\n    // Subscription Management\n    async createSubscription(subscriptionData) {\n        const id = (0,uuid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n        const now = new Date().toISOString();\n        await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`INSERT INTO subscriptions (id, user_id, name, amount, currency, billing_cycle, \n       next_billing_date, status, category, description, website_url, cancel_url, created_at, updated_at) \n       VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`, [\n            id,\n            subscriptionData.user_id,\n            subscriptionData.name,\n            subscriptionData.amount,\n            subscriptionData.currency,\n            subscriptionData.billing_cycle,\n            subscriptionData.next_billing_date,\n            subscriptionData.status,\n            subscriptionData.category,\n            subscriptionData.description,\n            subscriptionData.website_url,\n            subscriptionData.cancel_url,\n            now,\n            now\n        ]);\n        return {\n            id,\n            ...subscriptionData,\n            created_at: now,\n            updated_at: now\n        };\n    }\n    async getSubscriptionsByUserId(userId) {\n        return await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(\"SELECT * FROM subscriptions WHERE user_id = ? ORDER BY created_at DESC\", [\n            userId\n        ]);\n    }\n    async getSubscriptionById(id) {\n        return await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.queryOne(\"SELECT * FROM subscriptions WHERE id = ?\", [\n            id\n        ]);\n    }\n    async updateSubscription(id, updates) {\n        const setClause = Object.keys(updates).map((key)=>`${key} = ?`).join(\", \");\n        const values = [\n            ...Object.values(updates),\n            new Date().toISOString(),\n            id\n        ];\n        await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`UPDATE subscriptions SET ${setClause}, updated_at = ? WHERE id = ?`, values);\n        return await this.getSubscriptionById(id);\n    }\n    async deleteSubscription(id) {\n        const result = await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(\"DELETE FROM subscriptions WHERE id = ?\", [\n            id\n        ]);\n        return result.affectedRows > 0;\n    }\n    async getActiveSubscriptions() {\n        return await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(\"SELECT * FROM subscriptions WHERE status = 'active' ORDER BY next_billing_date ASC\");\n    }\n    async getSubscriptionsDueForReminder(days) {\n        return await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`SELECT s.*, u.email, u.name as user_name \n       FROM subscriptions s \n       JOIN users u ON s.user_id = u.id \n       WHERE s.status = 'active' \n       AND s.next_billing_date = DATE_ADD(CURDATE(), INTERVAL ? DAY)`, [\n            days\n        ]);\n    }\n    // User Preferences Management\n    async createUserPreferences(userId, preferences) {\n        const now = new Date().toISOString();\n        const defaultPrefs = {\n            reminder_days: [\n                1,\n                3,\n                7\n            ],\n            reminder_frequency: \"once\",\n            preferred_time: \"09:00:00\",\n            email_welcome: true,\n            email_upgrade: true,\n            email_bank_scan: true,\n            email_reminders: true,\n            ...preferences\n        };\n        await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`INSERT INTO user_preferences (user_id, reminder_days, reminder_frequency, preferred_time,\n       email_welcome, email_upgrade, email_bank_scan, email_reminders, created_at, updated_at)\n       VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`, [\n            userId,\n            JSON.stringify(defaultPrefs.reminder_days),\n            defaultPrefs.reminder_frequency,\n            defaultPrefs.preferred_time,\n            defaultPrefs.email_welcome,\n            defaultPrefs.email_upgrade,\n            defaultPrefs.email_bank_scan,\n            defaultPrefs.email_reminders,\n            now,\n            now\n        ]);\n        const result = await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.queryOne(\"SELECT * FROM user_preferences WHERE user_id = ?\", [\n            userId\n        ]);\n        if (result) {\n            result.reminder_days = JSON.parse(result.reminder_days);\n        }\n        return result;\n    }\n    async getUserPreferences(userId) {\n        const result = await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.queryOne(\"SELECT * FROM user_preferences WHERE user_id = ?\", [\n            userId\n        ]);\n        if (result) {\n            result.reminder_days = JSON.parse(result.reminder_days);\n        }\n        return result;\n    }\n    async updateUserPreferences(userId, updates) {\n        const updateData = {\n            ...updates\n        };\n        if (updateData.reminder_days) {\n            updateData.reminder_days = JSON.stringify(updateData.reminder_days);\n        }\n        const setClause = Object.keys(updateData).map((key)=>`${key} = ?`).join(\", \");\n        const values = [\n            ...Object.values(updateData),\n            new Date().toISOString(),\n            userId\n        ];\n        await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`UPDATE user_preferences SET ${setClause}, updated_at = ? WHERE user_id = ?`, values);\n        return await this.getUserPreferences(userId);\n    }\n    // Reminder Logs Management\n    async createReminderLog(logData) {\n        const now = new Date().toISOString();\n        const result = await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`INSERT INTO reminder_logs (user_id, subscription_id, days_before_renewal, email_sent, error_message, sent_at)\n       VALUES (?, ?, ?, ?, ?, ?)`, [\n            logData.user_id,\n            logData.subscription_id,\n            logData.days_before_renewal,\n            logData.email_sent,\n            logData.error_message,\n            now\n        ]);\n        return {\n            id: result.insertId,\n            ...logData,\n            sent_at: now\n        };\n    }\n    async getReminderLogs(userId, limit = 50) {\n        return await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`SELECT rl.*, s.name as subscription_name \n       FROM reminder_logs rl \n       JOIN subscriptions s ON rl.subscription_id = s.id \n       WHERE rl.user_id = ? \n       ORDER BY rl.sent_at DESC \n       LIMIT ?`, [\n            userId,\n            limit\n        ]);\n    }\n    async cleanupOldReminderLogs(daysOld = 90) {\n        const result = await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(\"DELETE FROM reminder_logs WHERE sent_at < DATE_SUB(NOW(), INTERVAL ? DAY)\", [\n            daysOld\n        ]);\n        return result.affectedRows;\n    }\n    // Analytics and Statistics\n    async getUserStats(userId) {\n        const stats = await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.queryOne(`SELECT \n        COUNT(*) as totalSubscriptions,\n        SUM(CASE WHEN status = 'active' THEN 1 ELSE 0 END) as activeSubscriptions,\n        SUM(CASE WHEN status = 'active' AND billing_cycle = 'monthly' THEN amount ELSE 0 END) as monthlyTotal,\n        SUM(CASE WHEN status = 'active' AND billing_cycle = 'yearly' THEN amount ELSE 0 END) as yearlyTotal,\n        AVG(CASE WHEN status = 'active' AND billing_cycle = 'monthly' THEN amount ELSE NULL END) as avgMonthlySpend\n       FROM subscriptions \n       WHERE user_id = ?`, [\n            userId\n        ]);\n        return {\n            totalSubscriptions: stats?.totalSubscriptions || 0,\n            activeSubscriptions: stats?.activeSubscriptions || 0,\n            monthlyTotal: stats?.monthlyTotal || 0,\n            yearlyTotal: stats?.yearlyTotal || 0,\n            avgMonthlySpend: stats?.avgMonthlySpend || 0\n        };\n    }\n}\n// Singleton instance\nconst dbAdapter = DatabaseAdapter.getInstance();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/database/adapter.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/database/config.ts":
/*!************************************!*\
  !*** ./src/lib/database/config.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DatabaseService: () => (/* binding */ DatabaseService),\n/* harmony export */   databaseService: () => (/* binding */ databaseService)\n/* harmony export */ });\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mysql2/promise */ \"(rsc)/./node_modules/mysql2/promise.js\");\n// Database Configuration for Plesk MySQL\n// Handles connection to Plesk hosting MySQL database\n\nclass DatabaseService {\n    constructor(){\n        this.pool = null;\n        this.config = this.getDatabaseConfig();\n        this.initializePool();\n    }\n    static getInstance() {\n        if (!DatabaseService.instance) {\n            DatabaseService.instance = new DatabaseService();\n        }\n        return DatabaseService.instance;\n    }\n    getDatabaseConfig() {\n        return {\n            host: process.env.DB_HOST || \"localhost\",\n            port: parseInt(process.env.DB_PORT || \"3306\"),\n            database: process.env.DB_NAME || \"\",\n            user: process.env.DB_USER || \"\",\n            password: process.env.DB_PASSWORD || \"\",\n            connectionLimit: 10,\n            acquireTimeout: 60000,\n            timeout: 60000,\n            reconnect: true\n        };\n    }\n    initializePool() {\n        try {\n            this.pool = mysql2_promise__WEBPACK_IMPORTED_MODULE_0__.createPool({\n                host: this.config.host,\n                port: this.config.port,\n                database: this.config.database,\n                user: this.config.user,\n                password: this.config.password,\n                connectionLimit: this.config.connectionLimit,\n                acquireTimeout: this.config.acquireTimeout,\n                timeout: this.config.timeout,\n                reconnect: this.config.reconnect,\n                ssl: false,\n                charset: \"utf8mb4\"\n            });\n            console.log(\"✅ MySQL connection pool initialized for Plesk database\");\n        } catch (error) {\n            console.error(\"❌ Failed to initialize MySQL connection pool:\", error);\n            throw error;\n        }\n    }\n    async testConnection() {\n        if (!this.pool) {\n            console.error(\"❌ Database pool not initialized\");\n            return false;\n        }\n        try {\n            const connection = await this.pool.getConnection();\n            await connection.ping();\n            connection.release();\n            console.log(\"✅ Database connection test successful\");\n            return true;\n        } catch (error) {\n            console.error(\"❌ Database connection test failed:\", error);\n            return false;\n        }\n    }\n    async query(sql, params) {\n        if (!this.pool) {\n            throw new Error(\"Database pool not initialized\");\n        }\n        try {\n            const [rows] = await this.pool.execute(sql, params);\n            return rows;\n        } catch (error) {\n            console.error(\"❌ Database query failed:\", error);\n            console.error(\"SQL:\", sql);\n            console.error(\"Params:\", params);\n            throw error;\n        }\n    }\n    async queryOne(sql, params) {\n        const results = await this.query(sql, params);\n        return results.length > 0 ? results[0] : null;\n    }\n    async transaction(callback) {\n        if (!this.pool) {\n            throw new Error(\"Database pool not initialized\");\n        }\n        const connection = await this.pool.getConnection();\n        try {\n            await connection.beginTransaction();\n            const result = await callback(connection);\n            await connection.commit();\n            return result;\n        } catch (error) {\n            await connection.rollback();\n            throw error;\n        } finally{\n            connection.release();\n        }\n    }\n    async closePool() {\n        if (this.pool) {\n            await this.pool.end();\n            this.pool = null;\n            console.log(\"✅ Database connection pool closed\");\n        }\n    }\n    // Helper method to create tables if they don't exist\n    async initializeTables() {\n        const createUsersTable = `\n      CREATE TABLE IF NOT EXISTS users (\n        id VARCHAR(255) PRIMARY KEY,\n        email VARCHAR(255) UNIQUE NOT NULL,\n        name VARCHAR(255),\n        image VARCHAR(500),\n        is_paid BOOLEAN DEFAULT FALSE,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n        INDEX idx_email (email),\n        INDEX idx_is_paid (is_paid)\n      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\n    `;\n        const createSubscriptionsTable = `\n      CREATE TABLE IF NOT EXISTS subscriptions (\n        id VARCHAR(255) PRIMARY KEY,\n        user_id VARCHAR(255) NOT NULL,\n        name VARCHAR(255) NOT NULL,\n        amount DECIMAL(10,2) NOT NULL,\n        currency VARCHAR(3) DEFAULT 'EUR',\n        billing_cycle ENUM('monthly', 'yearly', 'weekly', 'daily') DEFAULT 'monthly',\n        next_billing_date DATE,\n        status ENUM('active', 'cancelled', 'paused') DEFAULT 'active',\n        category VARCHAR(100),\n        description TEXT,\n        website_url VARCHAR(500),\n        cancel_url VARCHAR(500),\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n        FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,\n        INDEX idx_user_id (user_id),\n        INDEX idx_status (status),\n        INDEX idx_next_billing_date (next_billing_date)\n      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\n    `;\n        const createUserPreferencesTable = `\n      CREATE TABLE IF NOT EXISTS user_preferences (\n        id INT AUTO_INCREMENT PRIMARY KEY,\n        user_id VARCHAR(255) NOT NULL,\n        reminder_days JSON DEFAULT '[]',\n        reminder_frequency ENUM('once', 'daily', 'weekly') DEFAULT 'once',\n        preferred_time TIME DEFAULT '09:00:00',\n        email_welcome BOOLEAN DEFAULT TRUE,\n        email_upgrade BOOLEAN DEFAULT TRUE,\n        email_bank_scan BOOLEAN DEFAULT TRUE,\n        email_reminders BOOLEAN DEFAULT TRUE,\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n        UNIQUE KEY unique_user_prefs (user_id),\n        FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE\n      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\n    `;\n        const createReminderLogsTable = `\n      CREATE TABLE IF NOT EXISTS reminder_logs (\n        id INT AUTO_INCREMENT PRIMARY KEY,\n        user_id VARCHAR(255) NOT NULL,\n        subscription_id VARCHAR(255) NOT NULL,\n        sent_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n        days_before_renewal INT NOT NULL,\n        email_sent BOOLEAN DEFAULT FALSE,\n        error_message TEXT,\n        INDEX idx_user_id (user_id),\n        INDEX idx_subscription_id (subscription_id),\n        INDEX idx_sent_at (sent_at),\n        FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,\n        FOREIGN KEY (subscription_id) REFERENCES subscriptions(id) ON DELETE CASCADE\n      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\n    `;\n        try {\n            await this.query(createUsersTable);\n            await this.query(createSubscriptionsTable);\n            await this.query(createUserPreferencesTable);\n            await this.query(createReminderLogsTable);\n            console.log(\"✅ Database tables initialized successfully\");\n        } catch (error) {\n            console.error(\"❌ Failed to initialize database tables:\", error);\n            throw error;\n        }\n    }\n}\n// Singleton instance\nconst databaseService = DatabaseService.getInstance();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/database/config.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/email/email-service.ts":
/*!****************************************!*\
  !*** ./src/lib/email/email-service.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EmailService: () => (/* binding */ EmailService),\n/* harmony export */   emailService: () => (/* binding */ emailService)\n/* harmony export */ });\n/* harmony import */ var nodemailer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nodemailer */ \"(rsc)/./node_modules/nodemailer/lib/nodemailer.js\");\n// Email Service for CashControl\n// Supports Plesk SMTP and alternative providers\n\nclass EmailService {\n    constructor(){\n        this.transporter = null;\n        this.config = this.getEmailConfig();\n        this.fromEmail = process.env.FROM_EMAIL || \"noreply@123cashcontrol.com\";\n        this.initializeTransporter();\n    }\n    getEmailConfig() {\n        const provider = process.env.EMAIL_PROVIDER || \"plesk\";\n        switch(provider){\n            case \"plesk\":\n                return {\n                    provider: \"plesk\",\n                    host: process.env.PLESK_SMTP_HOST || \"mail.yourdomain.com\",\n                    port: parseInt(process.env.PLESK_SMTP_PORT || \"587\"),\n                    secure: process.env.PLESK_SMTP_SECURE === \"true\",\n                    auth: {\n                        user: process.env.PLESK_SMTP_USER || \"\",\n                        pass: process.env.PLESK_SMTP_PASS || \"\"\n                    }\n                };\n            case \"sendgrid\":\n                return {\n                    provider: \"sendgrid\",\n                    apiKey: process.env.SENDGRID_API_KEY || \"\"\n                };\n            case \"mailgun\":\n                return {\n                    provider: \"mailgun\",\n                    apiKey: process.env.MAILGUN_API_KEY || \"\"\n                };\n            default:\n                return {\n                    provider: \"plesk\",\n                    host: \"localhost\",\n                    port: 587,\n                    secure: false,\n                    auth: {\n                        user: \"\",\n                        pass: \"\"\n                    }\n                };\n        }\n    }\n    async initializeTransporter() {\n        try {\n            if (this.config.provider === \"plesk\") {\n                this.transporter = nodemailer__WEBPACK_IMPORTED_MODULE_0__.createTransporter({\n                    host: this.config.host,\n                    port: this.config.port,\n                    secure: this.config.secure,\n                    auth: this.config.auth,\n                    tls: {\n                        rejectUnauthorized: false // For self-signed certificates\n                    }\n                });\n                // Test the connection\n                await this.transporter.verify();\n                console.log(\"✅ Plesk SMTP connection verified\");\n            }\n        } catch (error) {\n            console.error(\"❌ Email service initialization failed:\", error);\n            console.warn(\"\\uD83D\\uDCE7 Email notifications will be disabled\");\n        }\n    }\n    async sendEmail(to, subject, html, text) {\n        if (!this.transporter) {\n            console.warn(\"\\uD83D\\uDCE7 Email service not available, skipping email to:\", to);\n            return false;\n        }\n        try {\n            const mailOptions = {\n                from: `CashControl <${this.fromEmail}>`,\n                to,\n                subject,\n                html,\n                text: text || this.htmlToText(html)\n            };\n            const result = await this.transporter.sendMail(mailOptions);\n            console.log(\"✅ Email sent successfully:\", result.messageId);\n            return true;\n        } catch (error) {\n            console.error(\"❌ Failed to send email:\", error);\n            return false;\n        }\n    }\n    async sendSubscriptionReminder(to, data) {\n        const template = this.generateReminderTemplate(data);\n        return this.sendEmail(to, template.subject, template.html, template.text);\n    }\n    async sendWelcomeEmail(to, userName) {\n        const template = this.generateWelcomeTemplate(userName);\n        return this.sendEmail(to, template.subject, template.html, template.text);\n    }\n    async sendUpgradeConfirmation(to, userName) {\n        const template = this.generateUpgradeTemplate(userName);\n        return this.sendEmail(to, template.subject, template.html, template.text);\n    }\n    async sendBankScanComplete(to, userName, subscriptionsFound) {\n        const template = this.generateBankScanTemplate(userName, subscriptionsFound);\n        return this.sendEmail(to, template.subject, template.html, template.text);\n    }\n    generateReminderTemplate(data) {\n        const urgencyColor = data.daysUntilRenewal <= 3 ? \"#ef4444\" : \"#f59e0b\";\n        const urgencyText = data.daysUntilRenewal <= 3 ? \"URGENT\" : \"REMINDER\";\n        const html = `\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <meta charset=\"utf-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n      <title>Subscription Renewal Reminder</title>\n    </head>\n    <body style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px;\">\n      \n      <div style=\"text-align: center; margin-bottom: 30px;\">\n        <h1 style=\"color: #1f2937; margin: 0;\">💳 CashControl</h1>\n        <p style=\"color: #6b7280; margin: 5px 0 0 0;\">Subscription Management</p>\n      </div>\n\n      <div style=\"background: ${urgencyColor}; color: white; padding: 15px; border-radius: 8px; text-align: center; margin-bottom: 25px;\">\n        <h2 style=\"margin: 0; font-size: 18px;\">${urgencyText}: Subscription Renewal</h2>\n      </div>\n\n      <div style=\"background: #f9fafb; padding: 25px; border-radius: 8px; margin-bottom: 25px;\">\n        <h3 style=\"margin: 0 0 15px 0; color: #1f2937;\">Hi ${data.userName},</h3>\n        <p style=\"margin: 0 0 15px 0;\">Your subscription to <strong>${data.subscriptionName}</strong> will renew in <strong>${data.daysUntilRenewal} day${data.daysUntilRenewal !== 1 ? \"s\" : \"\"}</strong>.</p>\n        \n        <div style=\"background: white; padding: 20px; border-radius: 6px; border-left: 4px solid #3b82f6;\">\n          <p style=\"margin: 0 0 10px 0;\"><strong>Amount:</strong> ${data.currency}${data.amount.toFixed(2)}</p>\n          <p style=\"margin: 0 0 10px 0;\"><strong>Renewal Date:</strong> ${data.renewalDate}</p>\n          <p style=\"margin: 0;\"><strong>Service:</strong> ${data.subscriptionName}</p>\n        </div>\n      </div>\n\n      <div style=\"text-align: center; margin-bottom: 25px;\">\n        <a href=\"${data.manageUrl || \"https://123cashcontrol.com/dashboard\"}\" \n           style=\"display: inline-block; background: #3b82f6; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; font-weight: 500;\">\n          Manage Subscription\n        </a>\n      </div>\n\n      ${data.cancelUrl ? `\n      <div style=\"text-align: center; margin-bottom: 25px;\">\n        <a href=\"${data.cancelUrl}\" \n           style=\"color: #6b7280; text-decoration: underline; font-size: 14px;\">\n          Cancel this subscription\n        </a>\n      </div>\n      ` : \"\"}\n\n      <div style=\"border-top: 1px solid #e5e7eb; padding-top: 20px; text-align: center; color: #6b7280; font-size: 14px;\">\n        <p>This email was sent by CashControl to help you manage your subscriptions.</p>\n        <p>Visit <a href=\"https://123cashcontrol.com\" style=\"color: #3b82f6;\">123cashcontrol.com</a> to update your preferences.</p>\n      </div>\n\n    </body>\n    </html>\n    `;\n        const text = `\nCashControl - Subscription Renewal Reminder\n\nHi ${data.userName},\n\nYour subscription to ${data.subscriptionName} will renew in ${data.daysUntilRenewal} day${data.daysUntilRenewal !== 1 ? \"s\" : \"\"}.\n\nDetails:\n- Amount: ${data.currency}${data.amount.toFixed(2)}\n- Renewal Date: ${data.renewalDate}\n- Service: ${data.subscriptionName}\n\nManage your subscription: ${data.manageUrl || \"https://123cashcontrol.com/dashboard\"}\n${data.cancelUrl ? `Cancel: ${data.cancelUrl}` : \"\"}\n\n---\nCashControl - Take control of your subscriptions\nhttps://123cashcontrol.com\n    `;\n        return {\n            subject: `${urgencyText}: ${data.subscriptionName} renews in ${data.daysUntilRenewal} day${data.daysUntilRenewal !== 1 ? \"s\" : \"\"}`,\n            html,\n            text\n        };\n    }\n    generateWelcomeTemplate(userName) {\n        const html = `\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <meta charset=\"utf-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n      <title>Welcome to CashControl</title>\n    </head>\n    <body style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px;\">\n      \n      <div style=\"text-align: center; margin-bottom: 30px;\">\n        <h1 style=\"color: #1f2937; margin: 0;\">🎉 Welcome to CashControl!</h1>\n        <p style=\"color: #6b7280; margin: 5px 0 0 0;\">Take control of your subscriptions</p>\n      </div>\n\n      <div style=\"background: #f9fafb; padding: 25px; border-radius: 8px; margin-bottom: 25px;\">\n        <h3 style=\"margin: 0 0 15px 0; color: #1f2937;\">Hi ${userName},</h3>\n        <p style=\"margin: 0 0 15px 0;\">Welcome to CashControl! We're excited to help you take control of your subscription spending.</p>\n        \n        <h4 style=\"color: #1f2937; margin: 20px 0 10px 0;\">What you can do:</h4>\n        <ul style=\"margin: 0; padding-left: 20px;\">\n          <li>Track all your subscriptions in one place</li>\n          <li>Get renewal reminders before you're charged</li>\n          <li>Scan your European bank accounts for automatic detection</li>\n          <li>Export your data anytime</li>\n          <li>Enjoy privacy-first design</li>\n        </ul>\n      </div>\n\n      <div style=\"text-align: center; margin-bottom: 25px;\">\n        <a href=\"https://123cashcontrol.com/dashboard\" \n           style=\"display: inline-block; background: #3b82f6; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; font-weight: 500;\">\n          Get Started\n        </a>\n      </div>\n\n      <div style=\"border-top: 1px solid #e5e7eb; padding-top: 20px; text-align: center; color: #6b7280; font-size: 14px;\">\n        <p>Need help? Visit our <a href=\"https://123cashcontrol.com/help\" style=\"color: #3b82f6;\">help center</a> or reply to this email.</p>\n      </div>\n\n    </body>\n    </html>\n    `;\n        const text = `\nWelcome to CashControl!\n\nHi ${userName},\n\nWelcome to CashControl! We're excited to help you take control of your subscription spending.\n\nWhat you can do:\n- Track all your subscriptions in one place\n- Get renewal reminders before you're charged\n- Scan your European bank accounts for automatic detection\n- Export your data anytime\n- Enjoy privacy-first design\n\nGet started: https://123cashcontrol.com/dashboard\n\nNeed help? Visit https://123cashcontrol.com/help\n\n---\nCashControl Team\nhttps://123cashcontrol.com\n    `;\n        return {\n            subject: \"Welcome to CashControl! \\uD83C\\uDF89\",\n            html,\n            text\n        };\n    }\n    generateUpgradeTemplate(userName) {\n        const html = `\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <meta charset=\"utf-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n      <title>Welcome to CashControl Pro</title>\n    </head>\n    <body style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px;\">\n      \n      <div style=\"text-align: center; margin-bottom: 30px;\">\n        <h1 style=\"color: #1f2937; margin: 0;\">⭐ Welcome to CashControl Pro!</h1>\n        <p style=\"color: #6b7280; margin: 5px 0 0 0;\">Unlock the full power of subscription management</p>\n      </div>\n\n      <div style=\"background: linear-gradient(135deg, #3b82f6, #1d4ed8); color: white; padding: 25px; border-radius: 8px; text-align: center; margin-bottom: 25px;\">\n        <h2 style=\"margin: 0 0 10px 0;\">🚀 You're now Pro!</h2>\n        <p style=\"margin: 0; opacity: 0.9;\">Thank you for upgrading to CashControl Pro</p>\n      </div>\n\n      <div style=\"background: #f9fafb; padding: 25px; border-radius: 8px; margin-bottom: 25px;\">\n        <h3 style=\"margin: 0 0 15px 0; color: #1f2937;\">Hi ${userName},</h3>\n        <p style=\"margin: 0 0 15px 0;\">Your upgrade to CashControl Pro is now active! Here's what you can now do:</p>\n        \n        <h4 style=\"color: #1f2937; margin: 20px 0 10px 0;\">Pro Features Unlocked:</h4>\n        <ul style=\"margin: 0; padding-left: 20px;\">\n          <li><strong>🏦 European Bank Scanning</strong> - Connect 100+ European banks</li>\n          <li><strong>📧 Email Renewal Alerts</strong> - Never miss a renewal again</li>\n          <li><strong>📊 Advanced Analytics</strong> - Deep insights into your spending</li>\n          <li><strong>📤 Enhanced Export</strong> - PDF reports and advanced formats</li>\n          <li><strong>🔄 Bulk Management</strong> - Manage multiple subscriptions at once</li>\n          <li><strong>⚡ Priority Support</strong> - Get help when you need it</li>\n        </ul>\n      </div>\n\n      <div style=\"text-align: center; margin-bottom: 25px;\">\n        <a href=\"https://123cashcontrol.com/dashboard\" \n           style=\"display: inline-block; background: #3b82f6; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; font-weight: 500;\">\n          Explore Pro Features\n        </a>\n      </div>\n\n      <div style=\"border-top: 1px solid #e5e7eb; padding-top: 20px; text-align: center; color: #6b7280; font-size: 14px;\">\n        <p>Questions about Pro features? We're here to help!</p>\n        <p>Email us at <a href=\"mailto:support@123cashcontrol.com\" style=\"color: #3b82f6;\">support@123cashcontrol.com</a></p>\n      </div>\n\n    </body>\n    </html>\n    `;\n        const text = `\nWelcome to CashControl Pro!\n\nHi ${userName},\n\nYour upgrade to CashControl Pro is now active! Here's what you can now do:\n\nPro Features Unlocked:\n- 🏦 European Bank Scanning - Connect 100+ European banks\n- 📧 Email Renewal Alerts - Never miss a renewal again\n- 📊 Advanced Analytics - Deep insights into your spending\n- 📤 Enhanced Export - PDF reports and advanced formats\n- 🔄 Bulk Management - Manage multiple subscriptions at once\n- ⚡ Priority Support - Get help when you need it\n\nExplore Pro features: https://123cashcontrol.com/dashboard\n\nQuestions? Email us at support@123cashcontrol.com\n\n---\nCashControl Team\nhttps://123cashcontrol.com\n    `;\n        return {\n            subject: \"⭐ Welcome to CashControl Pro!\",\n            html,\n            text\n        };\n    }\n    generateBankScanTemplate(userName, subscriptionsFound) {\n        const html = `\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <meta charset=\"utf-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n      <title>Bank Scan Complete</title>\n    </head>\n    <body style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px;\">\n      \n      <div style=\"text-align: center; margin-bottom: 30px;\">\n        <h1 style=\"color: #1f2937; margin: 0;\">🏦 Bank Scan Complete</h1>\n        <p style=\"color: #6b7280; margin: 5px 0 0 0;\">CashControl found your subscriptions</p>\n      </div>\n\n      <div style=\"background: #10b981; color: white; padding: 20px; border-radius: 8px; text-align: center; margin-bottom: 25px;\">\n        <h2 style=\"margin: 0 0 10px 0;\">✅ Scan Successful!</h2>\n        <p style=\"margin: 0; font-size: 18px;\">Found ${subscriptionsFound} subscription${subscriptionsFound !== 1 ? \"s\" : \"\"}</p>\n      </div>\n\n      <div style=\"background: #f9fafb; padding: 25px; border-radius: 8px; margin-bottom: 25px;\">\n        <h3 style=\"margin: 0 0 15px 0; color: #1f2937;\">Hi ${userName},</h3>\n        <p style=\"margin: 0 0 15px 0;\">Great news! We've completed scanning your bank account and found ${subscriptionsFound} subscription${subscriptionsFound !== 1 ? \"s\" : \"\"} that ${subscriptionsFound !== 1 ? \"were\" : \"was\"} automatically detected.</p>\n        \n        ${subscriptionsFound > 0 ? `\n        <p style=\"margin: 0 0 15px 0;\">These subscriptions have been added to your CashControl dashboard where you can:</p>\n        <ul style=\"margin: 0; padding-left: 20px;\">\n          <li>Review and edit subscription details</li>\n          <li>Set up renewal reminders</li>\n          <li>Track your spending patterns</li>\n          <li>Cancel unwanted subscriptions</li>\n        </ul>\n        ` : `\n        <p style=\"margin: 0;\">No subscriptions were detected in your recent transactions. You can still manually add any subscriptions you want to track.</p>\n        `}\n      </div>\n\n      <div style=\"text-align: center; margin-bottom: 25px;\">\n        <a href=\"https://123cashcontrol.com/dashboard\" \n           style=\"display: inline-block; background: #3b82f6; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; font-weight: 500;\">\n          View Your Subscriptions\n        </a>\n      </div>\n\n      <div style=\"border-top: 1px solid #e5e7eb; padding-top: 20px; text-align: center; color: #6b7280; font-size: 14px;\">\n        <p>Your bank data is processed securely and never stored permanently.</p>\n        <p>Questions? Contact us at <a href=\"mailto:support@123cashcontrol.com\" style=\"color: #3b82f6;\">support@123cashcontrol.com</a></p>\n      </div>\n\n    </body>\n    </html>\n    `;\n        const text = `\nBank Scan Complete - CashControl\n\nHi ${userName},\n\nGreat news! We've completed scanning your bank account and found ${subscriptionsFound} subscription${subscriptionsFound !== 1 ? \"s\" : \"\"} that ${subscriptionsFound !== 1 ? \"were\" : \"was\"} automatically detected.\n\n${subscriptionsFound > 0 ? `\nThese subscriptions have been added to your CashControl dashboard where you can:\n- Review and edit subscription details\n- Set up renewal reminders\n- Track your spending patterns\n- Cancel unwanted subscriptions\n` : `\nNo subscriptions were detected in your recent transactions. You can still manually add any subscriptions you want to track.\n`}\n\nView your subscriptions: https://123cashcontrol.com/dashboard\n\nYour bank data is processed securely and never stored permanently.\n\nQuestions? Contact us at support@123cashcontrol.com\n\n---\nCashControl Team\nhttps://123cashcontrol.com\n    `;\n        return {\n            subject: `🏦 Bank scan complete - Found ${subscriptionsFound} subscription${subscriptionsFound !== 1 ? \"s\" : \"\"}`,\n            html,\n            text\n        };\n    }\n    htmlToText(html) {\n        return html.replace(/<[^>]*>/g, \"\").replace(/&nbsp;/g, \" \").replace(/&amp;/g, \"&\").replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\").replace(/\\s+/g, \" \").trim();\n    }\n}\n// Singleton instance\nconst emailService = new EmailService();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/email/email-service.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/mysql2","vendor-chunks/aws-ssl-profiles","vendor-chunks/iconv-lite","vendor-chunks/long","vendor-chunks/named-placeholders","vendor-chunks/denque","vendor-chunks/is-property","vendor-chunks/lru.min","vendor-chunks/sqlstring","vendor-chunks/seq-queue","vendor-chunks/generate-function","vendor-chunks/uuid","vendor-chunks/safer-buffer","vendor-chunks/nodemailer"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmigration%2Ftest%2Froute&page=%2Fapi%2Fmigration%2Ftest%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmigration%2Ftest%2Froute.ts&appDir=C%3A%5CUsers%5CGebruiker%5CDocuments%5CGitHub%5CI-hate-subscriptions%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CGebruiker%5CDocuments%5CGitHub%5CI-hate-subscriptions&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();