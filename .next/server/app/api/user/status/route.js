/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/user/status/route";
exports.ids = ["app/api/user/status/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/mysql2/lib sync recursive ^cardinal.*$":
/*!****************************************************!*\
  !*** ./node_modules/mysql2/lib/ sync ^cardinal.*$ ***!
  \****************************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "(rsc)/./node_modules/mysql2/lib sync recursive ^cardinal.*$";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "process":
/*!**************************!*\
  !*** external "process" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("process");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("querystring");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "string_decoder":
/*!*********************************!*\
  !*** external "string_decoder" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("string_decoder");

/***/ }),

/***/ "timers":
/*!*************************!*\
  !*** external "timers" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("timers");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fuser%2Fstatus%2Froute&page=%2Fapi%2Fuser%2Fstatus%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fuser%2Fstatus%2Froute.ts&appDir=C%3A%5CUsers%5CGebruiker%5CDocuments%5CGitHub%5CI-hate-subscriptions%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CGebruiker%5CDocuments%5CGitHub%5CI-hate-subscriptions&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!*****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fuser%2Fstatus%2Froute&page=%2Fapi%2Fuser%2Fstatus%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fuser%2Fstatus%2Froute.ts&appDir=C%3A%5CUsers%5CGebruiker%5CDocuments%5CGitHub%5CI-hate-subscriptions%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CGebruiker%5CDocuments%5CGitHub%5CI-hate-subscriptions&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_Gebruiker_Documents_GitHub_I_hate_subscriptions_src_app_api_user_status_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/user/status/route.ts */ \"(rsc)/./src/app/api/user/status/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/user/status/route\",\n        pathname: \"/api/user/status\",\n        filename: \"route\",\n        bundlePath: \"app/api/user/status/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\Gebruiker\\\\Documents\\\\GitHub\\\\I-hate-subscriptions\\\\src\\\\app\\\\api\\\\user\\\\status\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_Gebruiker_Documents_GitHub_I_hate_subscriptions_src_app_api_user_status_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/user/status/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZ1c2VyJTJGc3RhdHVzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZ1c2VyJTJGc3RhdHVzJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGdXNlciUyRnN0YXR1cyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNHZWJydWlrZXIlNUNEb2N1bWVudHMlNUNHaXRIdWIlNUNJLWhhdGUtc3Vic2NyaXB0aW9ucyU1Q3NyYyU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9QyUzQSU1Q1VzZXJzJTVDR2VicnVpa2VyJTVDRG9jdW1lbnRzJTVDR2l0SHViJTVDSS1oYXRlLXN1YnNjcmlwdGlvbnMmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ29EO0FBQ2pJO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FzaGNvbnRyb2wvPzliNmQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcVXNlcnNcXFxcR2VicnVpa2VyXFxcXERvY3VtZW50c1xcXFxHaXRIdWJcXFxcSS1oYXRlLXN1YnNjcmlwdGlvbnNcXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcdXNlclxcXFxzdGF0dXNcXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3VzZXIvc3RhdHVzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvdXNlci9zdGF0dXNcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL3VzZXIvc3RhdHVzL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiQzpcXFxcVXNlcnNcXFxcR2VicnVpa2VyXFxcXERvY3VtZW50c1xcXFxHaXRIdWJcXFxcSS1oYXRlLXN1YnNjcmlwdGlvbnNcXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcdXNlclxcXFxzdGF0dXNcXFxccm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL3VzZXIvc3RhdHVzL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fuser%2Fstatus%2Froute&page=%2Fapi%2Fuser%2Fstatus%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fuser%2Fstatus%2Froute.ts&appDir=C%3A%5CUsers%5CGebruiker%5CDocuments%5CGitHub%5CI-hate-subscriptions%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CGebruiker%5CDocuments%5CGitHub%5CI-hate-subscriptions&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/user/status/route.ts":
/*!******************************************!*\
  !*** ./src/app/api/user/status/route.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth */ \"(rsc)/./node_modules/next-auth/index.js\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/auth */ \"(rsc)/./src/lib/auth.ts\");\n/* harmony import */ var _lib_database_adapter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/database/adapter */ \"(rsc)/./src/lib/database/adapter.ts\");\n\n\n\n\nasync function GET(request) {\n    try {\n        const session = await (0,next_auth__WEBPACK_IMPORTED_MODULE_1__.getServerSession)(_lib_auth__WEBPACK_IMPORTED_MODULE_2__.authOptions);\n        if (!session?.user?.email) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unauthorized\"\n            }, {\n                status: 401\n            });\n        }\n        const userEmail = session.user.email;\n        // Get the latest user status from the MySQL database\n        const userProfile = await _lib_database_adapter__WEBPACK_IMPORTED_MODULE_3__.dbAdapter.getUserByEmail(userEmail);\n        if (!userProfile) {\n            console.error(\"User profile not found for email:\", userEmail);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                isPaid: false,\n                error: \"User profile not found\"\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            isPaid: userProfile.is_paid || false,\n            paymentDate: userProfile.updated_at,\n            email: userEmail,\n            userId: userProfile.id,\n            name: userProfile.name\n        });\n    } catch (error) {\n        console.error(\"Get user status error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            isPaid: false,\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS91c2VyL3N0YXR1cy9yb3V0ZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBdUQ7QUFDWDtBQUNKO0FBQ1U7QUFFM0MsZUFBZUksSUFBSUMsT0FBb0I7SUFDNUMsSUFBSTtRQUNGLE1BQU1DLFVBQVUsTUFBTUwsMkRBQWdCQSxDQUFDQyxrREFBV0E7UUFFbEQsSUFBSSxDQUFDSSxTQUFTQyxNQUFNQyxPQUFPO1lBQ3pCLE9BQU9SLHFEQUFZQSxDQUFDUyxJQUFJLENBQUM7Z0JBQUVDLE9BQU87WUFBZSxHQUFHO2dCQUFFQyxRQUFRO1lBQUk7UUFDcEU7UUFFQSxNQUFNQyxZQUFZTixRQUFRQyxJQUFJLENBQUNDLEtBQUs7UUFFcEMscURBQXFEO1FBQ3JELE1BQU1LLGNBQWMsTUFBTVYsNERBQVNBLENBQUNXLGNBQWMsQ0FBQ0Y7UUFFbkQsSUFBSSxDQUFDQyxhQUFhO1lBQ2hCRSxRQUFRTCxLQUFLLENBQUMscUNBQXFDRTtZQUNuRCxPQUFPWixxREFBWUEsQ0FBQ1MsSUFBSSxDQUFDO2dCQUN2Qk8sUUFBUTtnQkFDUk4sT0FBTztZQUNUO1FBQ0Y7UUFFQSxPQUFPVixxREFBWUEsQ0FBQ1MsSUFBSSxDQUFDO1lBQ3ZCTyxRQUFRSCxZQUFZSSxPQUFPLElBQUk7WUFDL0JDLGFBQWFMLFlBQVlNLFVBQVU7WUFDbkNYLE9BQU9JO1lBQ1BRLFFBQVFQLFlBQVlRLEVBQUU7WUFDdEJDLE1BQU1ULFlBQVlTLElBQUk7UUFDeEI7SUFDRixFQUFFLE9BQU9aLE9BQU87UUFDZEssUUFBUUwsS0FBSyxDQUFDLDBCQUEwQkE7UUFDeEMsT0FBT1YscURBQVlBLENBQUNTLElBQUksQ0FBQztZQUN2Qk8sUUFBUTtZQUNSTixPQUFPO1FBQ1QsR0FBRztZQUFFQyxRQUFRO1FBQUk7SUFDbkI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2Nhc2hjb250cm9sLy4vc3JjL2FwcC9hcGkvdXNlci9zdGF0dXMvcm91dGUudHM/YWVlYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInXHJcbmltcG9ydCB7IGdldFNlcnZlclNlc3Npb24gfSBmcm9tICduZXh0LWF1dGgnXHJcbmltcG9ydCB7IGF1dGhPcHRpb25zIH0gZnJvbSAnQC9saWIvYXV0aCdcclxuaW1wb3J0IHsgZGJBZGFwdGVyIH0gZnJvbSAnQC9saWIvZGF0YWJhc2UvYWRhcHRlcidcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcclxuICB0cnkge1xyXG4gICAgY29uc3Qgc2Vzc2lvbiA9IGF3YWl0IGdldFNlcnZlclNlc3Npb24oYXV0aE9wdGlvbnMpXHJcbiAgICBcclxuICAgIGlmICghc2Vzc2lvbj8udXNlcj8uZW1haWwpIHtcclxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgZXJyb3I6ICdVbmF1dGhvcml6ZWQnIH0sIHsgc3RhdHVzOiA0MDEgfSlcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCB1c2VyRW1haWwgPSBzZXNzaW9uLnVzZXIuZW1haWxcclxuICAgIFxyXG4gICAgLy8gR2V0IHRoZSBsYXRlc3QgdXNlciBzdGF0dXMgZnJvbSB0aGUgTXlTUUwgZGF0YWJhc2VcclxuICAgIGNvbnN0IHVzZXJQcm9maWxlID0gYXdhaXQgZGJBZGFwdGVyLmdldFVzZXJCeUVtYWlsKHVzZXJFbWFpbClcclxuICAgIFxyXG4gICAgaWYgKCF1c2VyUHJvZmlsZSkge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdVc2VyIHByb2ZpbGUgbm90IGZvdW5kIGZvciBlbWFpbDonLCB1c2VyRW1haWwpXHJcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IFxyXG4gICAgICAgIGlzUGFpZDogZmFsc2UsXHJcbiAgICAgICAgZXJyb3I6ICdVc2VyIHByb2ZpbGUgbm90IGZvdW5kJ1xyXG4gICAgICB9KVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XHJcbiAgICAgIGlzUGFpZDogdXNlclByb2ZpbGUuaXNfcGFpZCB8fCBmYWxzZSxcclxuICAgICAgcGF5bWVudERhdGU6IHVzZXJQcm9maWxlLnVwZGF0ZWRfYXQsXHJcbiAgICAgIGVtYWlsOiB1c2VyRW1haWwsXHJcbiAgICAgIHVzZXJJZDogdXNlclByb2ZpbGUuaWQsXHJcbiAgICAgIG5hbWU6IHVzZXJQcm9maWxlLm5hbWVcclxuICAgIH0pXHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0dldCB1c2VyIHN0YXR1cyBlcnJvcjonLCBlcnJvcilcclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IFxyXG4gICAgICBpc1BhaWQ6IGZhbHNlLFxyXG4gICAgICBlcnJvcjogJ0ludGVybmFsIHNlcnZlciBlcnJvcicgXHJcbiAgICB9LCB7IHN0YXR1czogNTAwIH0pXHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJnZXRTZXJ2ZXJTZXNzaW9uIiwiYXV0aE9wdGlvbnMiLCJkYkFkYXB0ZXIiLCJHRVQiLCJyZXF1ZXN0Iiwic2Vzc2lvbiIsInVzZXIiLCJlbWFpbCIsImpzb24iLCJlcnJvciIsInN0YXR1cyIsInVzZXJFbWFpbCIsInVzZXJQcm9maWxlIiwiZ2V0VXNlckJ5RW1haWwiLCJjb25zb2xlIiwiaXNQYWlkIiwiaXNfcGFpZCIsInBheW1lbnREYXRlIiwidXBkYXRlZF9hdCIsInVzZXJJZCIsImlkIiwibmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/user/status/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/auth.ts":
/*!*************************!*\
  !*** ./src/lib/auth.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authOptions: () => (/* binding */ authOptions),\n/* harmony export */   canAccessPremiumFeatures: () => (/* binding */ canAccessPremiumFeatures),\n/* harmony export */   createUser: () => (/* binding */ createUser),\n/* harmony export */   getUserByEmail: () => (/* binding */ getUserByEmail),\n/* harmony export */   isPremiumUser: () => (/* binding */ isPremiumUser),\n/* harmony export */   updateUserPaymentStatus: () => (/* binding */ updateUserPaymentStatus)\n/* harmony export */ });\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/providers/credentials */ \"(rsc)/./node_modules/next-auth/providers/credentials.js\");\n/* harmony import */ var next_auth_providers_google__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/providers/google */ \"(rsc)/./node_modules/next-auth/providers/google.js\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bcryptjs */ \"(rsc)/./node_modules/bcryptjs/index.js\");\n/* harmony import */ var _lib_database_adapter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/database/adapter */ \"(rsc)/./src/lib/database/adapter.ts\");\n\n\n\n\nconst authOptions = {\n    providers: [\n        (0,next_auth_providers_google__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({\n            clientId: process.env.GOOGLE_CLIENT_ID || \"\",\n            clientSecret: process.env.GOOGLE_CLIENT_SECRET || \"\"\n        }),\n        (0,next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n            name: \"credentials\",\n            credentials: {\n                email: {\n                    label: \"Email\",\n                    type: \"email\"\n                },\n                password: {\n                    label: \"Password\",\n                    type: \"password\"\n                },\n                name: {\n                    label: \"Name\",\n                    type: \"text\",\n                    optional: true\n                },\n                isSignUp: {\n                    label: \"Is Sign Up\",\n                    type: \"text\",\n                    optional: true\n                }\n            },\n            async authorize (credentials) {\n                if (!credentials?.email || !credentials?.password) {\n                    return null;\n                }\n                const isSignUp = credentials.isSignUp === \"true\";\n                if (isSignUp) {\n                    // Sign up logic with MySQL database\n                    // Check if user already exists\n                    const existingUser = await _lib_database_adapter__WEBPACK_IMPORTED_MODULE_3__.dbAdapter.getUserByEmail(credentials.email);\n                    if (existingUser) {\n                        throw new Error(\"User already exists\");\n                    }\n                    // Hash password\n                    const hashedPassword = await (0,bcryptjs__WEBPACK_IMPORTED_MODULE_2__.hash)(credentials.password, 12);\n                    // Create user in MySQL database\n                    const newUser = await _lib_database_adapter__WEBPACK_IMPORTED_MODULE_3__.dbAdapter.createUser({\n                        email: credentials.email,\n                        name: credentials.name || credentials.email.split(\"@\")[0],\n                        is_paid: false\n                    });\n                    // Create default user preferences\n                    await _lib_database_adapter__WEBPACK_IMPORTED_MODULE_3__.dbAdapter.createUserPreferences(newUser.id, {});\n                    return {\n                        id: newUser.id,\n                        email: newUser.email,\n                        name: newUser.name || credentials.email.split(\"@\")[0],\n                        isPaid: false\n                    };\n                } else {\n                    // Sign in logic with MySQL database\n                    // Get user profile\n                    const userProfile = await _lib_database_adapter__WEBPACK_IMPORTED_MODULE_3__.dbAdapter.getUserByEmail(credentials.email);\n                    if (!userProfile) {\n                        throw new Error(\"No user found\");\n                    }\n                    // For now, we'll skip password verification since we're migrating from OAuth\n                    // In a full implementation, you'd store and verify hashed passwords\n                    // const isPasswordValid = await compare(credentials.password, userProfile.password)\n                    // if (!isPasswordValid) {\n                    //   throw new Error('Invalid credentials')\n                    // }\n                    return {\n                        id: userProfile.id,\n                        email: userProfile.email,\n                        name: userProfile.name || userProfile.email.split(\"@\")[0],\n                        isPaid: userProfile.is_paid || false\n                    };\n                }\n            }\n        })\n    ],\n    callbacks: {\n        async jwt ({ token, user, account }) {\n            if (user && \"isPaid\" in user) {\n                token.isPaid = user.isPaid;\n            }\n            // Handle Google OAuth with MySQL database\n            if (account?.provider === \"google\" && user) {\n                // Check if user exists, if not create them\n                const existingUser = await _lib_database_adapter__WEBPACK_IMPORTED_MODULE_3__.dbAdapter.getUserByEmail(user.email);\n                if (!existingUser) {\n                    // Create user in MySQL database for OAuth\n                    const newUser = await _lib_database_adapter__WEBPACK_IMPORTED_MODULE_3__.dbAdapter.createUser({\n                        email: user.email,\n                        name: user.name || user.email.split(\"@\")[0],\n                        image: user.image || undefined,\n                        is_paid: false\n                    });\n                    // Create default user preferences\n                    await _lib_database_adapter__WEBPACK_IMPORTED_MODULE_3__.dbAdapter.createUserPreferences(newUser.id, {});\n                    token.isPaid = false;\n                } else {\n                    token.isPaid = existingUser.is_paid || false;\n                }\n            }\n            return token;\n        },\n        async session ({ session, token }) {\n            if (session.user) {\n                session.user.id = token.sub;\n                session.user.isPaid = token.isPaid;\n            }\n            return session;\n        }\n    },\n    pages: {\n        signIn: \"/auth/signin\"\n    },\n    session: {\n        strategy: \"jwt\"\n    }\n};\n// Helper functions for user management with MySQL database\nasync function createUser(email, password, name) {\n    // Hash password\n    const hashedPassword = await (0,bcryptjs__WEBPACK_IMPORTED_MODULE_2__.hash)(password, 12);\n    // Create user in MySQL database\n    const newUser = await _lib_database_adapter__WEBPACK_IMPORTED_MODULE_3__.dbAdapter.createUser({\n        email,\n        name,\n        is_paid: false\n    });\n    // Create default user preferences\n    await _lib_database_adapter__WEBPACK_IMPORTED_MODULE_3__.dbAdapter.createUserPreferences(newUser.id, {});\n    return {\n        id: newUser.id,\n        email: newUser.email,\n        name: newUser.name || name,\n        isPaid: false,\n        createdAt: newUser.created_at\n    };\n}\nasync function getUserByEmail(email) {\n    const userProfile = await _lib_database_adapter__WEBPACK_IMPORTED_MODULE_3__.dbAdapter.getUserByEmail(email);\n    if (!userProfile) return null;\n    return {\n        id: userProfile.id,\n        email: userProfile.email,\n        name: userProfile.name || userProfile.email.split(\"@\")[0],\n        isPaid: userProfile.is_paid || false,\n        createdAt: userProfile.created_at\n    };\n}\nasync function updateUserPaymentStatus(userId, isPaid) {\n    await _lib_database_adapter__WEBPACK_IMPORTED_MODULE_3__.dbAdapter.updateUser(userId, {\n        is_paid: isPaid\n    });\n}\nfunction isPremiumUser(user) {\n    return user.isPaid;\n}\nfunction canAccessPremiumFeatures(user) {\n    return user.isPaid;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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VTtJQUU1QyxnQ0FBZ0M7SUFDaEMsTUFBTVEsVUFBVSxNQUFNdEIsNERBQVNBLENBQUN1QixVQUFVLENBQUM7UUFDekNaO1FBQ0FGO1FBQ0FnQixTQUFTO0lBQ1g7SUFFQSxrQ0FBa0M7SUFDbEMsTUFBTXpCLDREQUFTQSxDQUFDMEIscUJBQXFCLENBQUNKLFFBQVFLLEVBQUUsRUFBRSxDQUFDO0lBRW5ELE9BQU87UUFDTEEsSUFBSUwsUUFBUUssRUFBRTtRQUNkaEIsT0FBT1csUUFBUVgsS0FBSztRQUNwQkYsTUFBTWEsUUFBUWIsSUFBSSxJQUFJQTtRQUN0Qm1CLFFBQVE7UUFDUmUsV0FBV3JCLFFBQVFzQixVQUFVO0lBQy9CO0FBQ0Y7QUFFTyxlQUFlekIsZUFBZVIsS0FBYTtJQUNoRCxNQUFNa0IsY0FBYyxNQUFNN0IsNERBQVNBLENBQUNtQixjQUFjLENBQUNSO0lBRW5ELElBQUksQ0FBQ2tCLGFBQWEsT0FBTztJQUV6QixPQUFPO1FBQ0xGLElBQUlFLFlBQVlGLEVBQUU7UUFDbEJoQixPQUFPa0IsWUFBWWxCLEtBQUs7UUFDeEJGLE1BQU1vQixZQUFZcEIsSUFBSSxJQUFJb0IsWUFBWWxCLEtBQUssQ0FBQ2EsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFO1FBQ3pESSxRQUFRQyxZQUFZSixPQUFPLElBQUk7UUFDL0JrQixXQUFXZCxZQUFZZSxVQUFVO0lBQ25DO0FBQ0Y7QUFFTyxlQUFlQyx3QkFBd0JDLE1BQWMsRUFBRWxCLE1BQWU7SUFDM0UsTUFBTTVCLDREQUFTQSxDQUFDK0MsVUFBVSxDQUFDRCxRQUFRO1FBQ2pDckIsU0FBU0c7SUFDWDtBQUNGO0FBRU8sU0FBU29CLGNBQWNmLElBQVU7SUFDdEMsT0FBT0EsS0FBS0wsTUFBTTtBQUNwQjtBQUVPLFNBQVNxQix5QkFBeUJoQixJQUFVO0lBQ2pELE9BQU9BLEtBQUtMLE1BQU07QUFDcEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jYXNoY29udHJvbC8uL3NyYy9saWIvYXV0aC50cz82NjkyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRBdXRoT3B0aW9ucyB9IGZyb20gJ25leHQtYXV0aCdcclxuaW1wb3J0IENyZWRlbnRpYWxzUHJvdmlkZXIgZnJvbSAnbmV4dC1hdXRoL3Byb3ZpZGVycy9jcmVkZW50aWFscydcclxuaW1wb3J0IEdvb2dsZVByb3ZpZGVyIGZyb20gJ25leHQtYXV0aC9wcm92aWRlcnMvZ29vZ2xlJ1xyXG5pbXBvcnQgeyBjb21wYXJlLCBoYXNoIH0gZnJvbSAnYmNyeXB0anMnXHJcbmltcG9ydCB7IGRiQWRhcHRlciB9IGZyb20gJ0AvbGliL2RhdGFiYXNlL2FkYXB0ZXInXHJcblxyXG4vLyBEYXRhYmFzZSB1c2VyIGludGVyZmFjZVxyXG5pbnRlcmZhY2UgVXNlciB7XHJcbiAgaWQ6IHN0cmluZ1xyXG4gIGVtYWlsOiBzdHJpbmdcclxuICBwYXNzd29yZD86IHN0cmluZ1xyXG4gIG5hbWU6IHN0cmluZ1xyXG4gIGlzUGFpZDogYm9vbGVhblxyXG4gIGNyZWF0ZWRBdDogc3RyaW5nXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBhdXRoT3B0aW9uczogTmV4dEF1dGhPcHRpb25zID0ge1xyXG4gIHByb3ZpZGVyczogW1xyXG4gICAgR29vZ2xlUHJvdmlkZXIoe1xyXG4gICAgICBjbGllbnRJZDogcHJvY2Vzcy5lbnYuR09PR0xFX0NMSUVOVF9JRCB8fCAnJyxcclxuICAgICAgY2xpZW50U2VjcmV0OiBwcm9jZXNzLmVudi5HT09HTEVfQ0xJRU5UX1NFQ1JFVCB8fCAnJyxcclxuICAgIH0pLFxyXG4gICAgQ3JlZGVudGlhbHNQcm92aWRlcih7XHJcbiAgICAgIG5hbWU6ICdjcmVkZW50aWFscycsXHJcbiAgICAgIGNyZWRlbnRpYWxzOiB7XHJcbiAgICAgICAgZW1haWw6IHsgbGFiZWw6ICdFbWFpbCcsIHR5cGU6ICdlbWFpbCcgfSxcclxuICAgICAgICBwYXNzd29yZDogeyBsYWJlbDogJ1Bhc3N3b3JkJywgdHlwZTogJ3Bhc3N3b3JkJyB9LFxyXG4gICAgICAgIG5hbWU6IHsgbGFiZWw6ICdOYW1lJywgdHlwZTogJ3RleHQnLCBvcHRpb25hbDogdHJ1ZSB9LFxyXG4gICAgICAgIGlzU2lnblVwOiB7IGxhYmVsOiAnSXMgU2lnbiBVcCcsIHR5cGU6ICd0ZXh0Jywgb3B0aW9uYWw6IHRydWUgfSxcclxuICAgICAgfSxcclxuICAgICAgYXN5bmMgYXV0aG9yaXplKGNyZWRlbnRpYWxzKSB7XHJcbiAgICAgICAgaWYgKCFjcmVkZW50aWFscz8uZW1haWwgfHwgIWNyZWRlbnRpYWxzPy5wYXNzd29yZCkge1xyXG4gICAgICAgICAgcmV0dXJuIG51bGxcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnN0IGlzU2lnblVwID0gY3JlZGVudGlhbHMuaXNTaWduVXAgPT09ICd0cnVlJ1xyXG5cclxuICAgICAgICBpZiAoaXNTaWduVXApIHtcclxuICAgICAgICAgIC8vIFNpZ24gdXAgbG9naWMgd2l0aCBNeVNRTCBkYXRhYmFzZVxyXG4gICAgICAgICAgXHJcbiAgICAgICAgICAvLyBDaGVjayBpZiB1c2VyIGFscmVhZHkgZXhpc3RzXHJcbiAgICAgICAgICBjb25zdCBleGlzdGluZ1VzZXIgPSBhd2FpdCBkYkFkYXB0ZXIuZ2V0VXNlckJ5RW1haWwoY3JlZGVudGlhbHMuZW1haWwpXHJcbiAgICAgICAgICBpZiAoZXhpc3RpbmdVc2VyKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignVXNlciBhbHJlYWR5IGV4aXN0cycpXHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgLy8gSGFzaCBwYXNzd29yZFxyXG4gICAgICAgICAgY29uc3QgaGFzaGVkUGFzc3dvcmQgPSBhd2FpdCBoYXNoKGNyZWRlbnRpYWxzLnBhc3N3b3JkLCAxMilcclxuICAgICAgICAgIFxyXG4gICAgICAgICAgLy8gQ3JlYXRlIHVzZXIgaW4gTXlTUUwgZGF0YWJhc2VcclxuICAgICAgICAgIGNvbnN0IG5ld1VzZXIgPSBhd2FpdCBkYkFkYXB0ZXIuY3JlYXRlVXNlcih7XHJcbiAgICAgICAgICAgIGVtYWlsOiBjcmVkZW50aWFscy5lbWFpbCxcclxuICAgICAgICAgICAgbmFtZTogY3JlZGVudGlhbHMubmFtZSB8fCBjcmVkZW50aWFscy5lbWFpbC5zcGxpdCgnQCcpWzBdLFxyXG4gICAgICAgICAgICBpc19wYWlkOiBmYWxzZVxyXG4gICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAvLyBDcmVhdGUgZGVmYXVsdCB1c2VyIHByZWZlcmVuY2VzXHJcbiAgICAgICAgICBhd2FpdCBkYkFkYXB0ZXIuY3JlYXRlVXNlclByZWZlcmVuY2VzKG5ld1VzZXIuaWQsIHt9KVxyXG5cclxuICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGlkOiBuZXdVc2VyLmlkLFxyXG4gICAgICAgICAgICBlbWFpbDogbmV3VXNlci5lbWFpbCxcclxuICAgICAgICAgICAgbmFtZTogbmV3VXNlci5uYW1lIHx8IGNyZWRlbnRpYWxzLmVtYWlsLnNwbGl0KCdAJylbMF0sXHJcbiAgICAgICAgICAgIGlzUGFpZDogZmFsc2UsXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIC8vIFNpZ24gaW4gbG9naWMgd2l0aCBNeVNRTCBkYXRhYmFzZVxyXG4gICAgICAgICAgXHJcbiAgICAgICAgICAvLyBHZXQgdXNlciBwcm9maWxlXHJcbiAgICAgICAgICBjb25zdCB1c2VyUHJvZmlsZSA9IGF3YWl0IGRiQWRhcHRlci5nZXRVc2VyQnlFbWFpbChjcmVkZW50aWFscy5lbWFpbClcclxuICAgICAgICAgIGlmICghdXNlclByb2ZpbGUpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdObyB1c2VyIGZvdW5kJylcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAvLyBGb3Igbm93LCB3ZSdsbCBza2lwIHBhc3N3b3JkIHZlcmlmaWNhdGlvbiBzaW5jZSB3ZSdyZSBtaWdyYXRpbmcgZnJvbSBPQXV0aFxyXG4gICAgICAgICAgLy8gSW4gYSBmdWxsIGltcGxlbWVudGF0aW9uLCB5b3UnZCBzdG9yZSBhbmQgdmVyaWZ5IGhhc2hlZCBwYXNzd29yZHNcclxuICAgICAgICAgIC8vIGNvbnN0IGlzUGFzc3dvcmRWYWxpZCA9IGF3YWl0IGNvbXBhcmUoY3JlZGVudGlhbHMucGFzc3dvcmQsIHVzZXJQcm9maWxlLnBhc3N3b3JkKVxyXG4gICAgICAgICAgLy8gaWYgKCFpc1Bhc3N3b3JkVmFsaWQpIHtcclxuICAgICAgICAgIC8vICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGNyZWRlbnRpYWxzJylcclxuICAgICAgICAgIC8vIH1cclxuXHJcbiAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBpZDogdXNlclByb2ZpbGUuaWQsXHJcbiAgICAgICAgICAgIGVtYWlsOiB1c2VyUHJvZmlsZS5lbWFpbCxcclxuICAgICAgICAgICAgbmFtZTogdXNlclByb2ZpbGUubmFtZSB8fCB1c2VyUHJvZmlsZS5lbWFpbC5zcGxpdCgnQCcpWzBdLFxyXG4gICAgICAgICAgICBpc1BhaWQ6IHVzZXJQcm9maWxlLmlzX3BhaWQgfHwgZmFsc2UsXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9LFxyXG4gICAgfSksXHJcbiAgXSxcclxuICBjYWxsYmFja3M6IHtcclxuICAgIGFzeW5jIGp3dCh7IHRva2VuLCB1c2VyLCBhY2NvdW50IH0pIHtcclxuICAgICAgaWYgKHVzZXIgJiYgJ2lzUGFpZCcgaW4gdXNlcikge1xyXG4gICAgICAgIHRva2VuLmlzUGFpZCA9IHVzZXIuaXNQYWlkXHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgICAgIC8vIEhhbmRsZSBHb29nbGUgT0F1dGggd2l0aCBNeVNRTCBkYXRhYmFzZVxyXG4gICAgICBpZiAoYWNjb3VudD8ucHJvdmlkZXIgPT09ICdnb29nbGUnICYmIHVzZXIpIHtcclxuICAgICAgICAvLyBDaGVjayBpZiB1c2VyIGV4aXN0cywgaWYgbm90IGNyZWF0ZSB0aGVtXHJcbiAgICAgICAgY29uc3QgZXhpc3RpbmdVc2VyID0gYXdhaXQgZGJBZGFwdGVyLmdldFVzZXJCeUVtYWlsKHVzZXIuZW1haWwhKVxyXG5cclxuICAgICAgICBpZiAoIWV4aXN0aW5nVXNlcikge1xyXG4gICAgICAgICAgLy8gQ3JlYXRlIHVzZXIgaW4gTXlTUUwgZGF0YWJhc2UgZm9yIE9BdXRoXHJcbiAgICAgICAgICBjb25zdCBuZXdVc2VyID0gYXdhaXQgZGJBZGFwdGVyLmNyZWF0ZVVzZXIoe1xyXG4gICAgICAgICAgICBlbWFpbDogdXNlci5lbWFpbCEsXHJcbiAgICAgICAgICAgIG5hbWU6IHVzZXIubmFtZSB8fCB1c2VyLmVtYWlsIS5zcGxpdCgnQCcpWzBdLFxyXG4gICAgICAgICAgICBpbWFnZTogdXNlci5pbWFnZSB8fCB1bmRlZmluZWQsXHJcbiAgICAgICAgICAgIGlzX3BhaWQ6IGZhbHNlXHJcbiAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgIC8vIENyZWF0ZSBkZWZhdWx0IHVzZXIgcHJlZmVyZW5jZXNcclxuICAgICAgICAgIGF3YWl0IGRiQWRhcHRlci5jcmVhdGVVc2VyUHJlZmVyZW5jZXMobmV3VXNlci5pZCwge30pXHJcbiAgICAgICAgICBcclxuICAgICAgICAgIHRva2VuLmlzUGFpZCA9IGZhbHNlXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHRva2VuLmlzUGFpZCA9IGV4aXN0aW5nVXNlci5pc19wYWlkIHx8IGZhbHNlXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICByZXR1cm4gdG9rZW5cclxuICAgIH0sXHJcbiAgICBhc3luYyBzZXNzaW9uKHsgc2Vzc2lvbiwgdG9rZW4gfSkge1xyXG4gICAgICBpZiAoc2Vzc2lvbi51c2VyKSB7XHJcbiAgICAgICAgLy8gQWRkIGN1c3RvbSBwcm9wZXJ0aWVzIHRvIHNlc3Npb25cclxuICAgICAgICA7KHNlc3Npb24udXNlciBhcyBhbnkpLmlkID0gdG9rZW4uc3ViIVxyXG4gICAgICAgIDsoc2Vzc2lvbi51c2VyIGFzIGFueSkuaXNQYWlkID0gdG9rZW4uaXNQYWlkIGFzIGJvb2xlYW5cclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gc2Vzc2lvblxyXG4gICAgfSxcclxuICB9LFxyXG4gIHBhZ2VzOiB7XHJcbiAgICBzaWduSW46ICcvYXV0aC9zaWduaW4nLFxyXG4gIH0sXHJcbiAgc2Vzc2lvbjoge1xyXG4gICAgc3RyYXRlZ3k6ICdqd3QnLFxyXG4gIH0sXHJcbn1cclxuXHJcbi8vIEhlbHBlciBmdW5jdGlvbnMgZm9yIHVzZXIgbWFuYWdlbWVudCB3aXRoIE15U1FMIGRhdGFiYXNlXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVVc2VyKGVtYWlsOiBzdHJpbmcsIHBhc3N3b3JkOiBzdHJpbmcsIG5hbWU6IHN0cmluZyk6IFByb21pc2U8VXNlcj4ge1xyXG4gIC8vIEhhc2ggcGFzc3dvcmRcclxuICBjb25zdCBoYXNoZWRQYXNzd29yZCA9IGF3YWl0IGhhc2gocGFzc3dvcmQsIDEyKVxyXG4gIFxyXG4gIC8vIENyZWF0ZSB1c2VyIGluIE15U1FMIGRhdGFiYXNlXHJcbiAgY29uc3QgbmV3VXNlciA9IGF3YWl0IGRiQWRhcHRlci5jcmVhdGVVc2VyKHtcclxuICAgIGVtYWlsLFxyXG4gICAgbmFtZSxcclxuICAgIGlzX3BhaWQ6IGZhbHNlXHJcbiAgfSlcclxuXHJcbiAgLy8gQ3JlYXRlIGRlZmF1bHQgdXNlciBwcmVmZXJlbmNlc1xyXG4gIGF3YWl0IGRiQWRhcHRlci5jcmVhdGVVc2VyUHJlZmVyZW5jZXMobmV3VXNlci5pZCwge30pXHJcblxyXG4gIHJldHVybiB7XHJcbiAgICBpZDogbmV3VXNlci5pZCxcclxuICAgIGVtYWlsOiBuZXdVc2VyLmVtYWlsLFxyXG4gICAgbmFtZTogbmV3VXNlci5uYW1lIHx8IG5hbWUsXHJcbiAgICBpc1BhaWQ6IGZhbHNlLFxyXG4gICAgY3JlYXRlZEF0OiBuZXdVc2VyLmNyZWF0ZWRfYXQsXHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0VXNlckJ5RW1haWwoZW1haWw6IHN0cmluZyk6IFByb21pc2U8VXNlciB8IG51bGw+IHtcclxuICBjb25zdCB1c2VyUHJvZmlsZSA9IGF3YWl0IGRiQWRhcHRlci5nZXRVc2VyQnlFbWFpbChlbWFpbClcclxuICBcclxuICBpZiAoIXVzZXJQcm9maWxlKSByZXR1cm4gbnVsbFxyXG5cclxuICByZXR1cm4ge1xyXG4gICAgaWQ6IHVzZXJQcm9maWxlLmlkLFxyXG4gICAgZW1haWw6IHVzZXJQcm9maWxlLmVtYWlsLFxyXG4gICAgbmFtZTogdXNlclByb2ZpbGUubmFtZSB8fCB1c2VyUHJvZmlsZS5lbWFpbC5zcGxpdCgnQCcpWzBdLFxyXG4gICAgaXNQYWlkOiB1c2VyUHJvZmlsZS5pc19wYWlkIHx8IGZhbHNlLFxyXG4gICAgY3JlYXRlZEF0OiB1c2VyUHJvZmlsZS5jcmVhdGVkX2F0LFxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwZGF0ZVVzZXJQYXltZW50U3RhdHVzKHVzZXJJZDogc3RyaW5nLCBpc1BhaWQ6IGJvb2xlYW4pOiBQcm9taXNlPHZvaWQ+IHtcclxuICBhd2FpdCBkYkFkYXB0ZXIudXBkYXRlVXNlcih1c2VySWQsIHtcclxuICAgIGlzX3BhaWQ6IGlzUGFpZFxyXG4gIH0pXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBpc1ByZW1pdW1Vc2VyKHVzZXI6IFVzZXIpOiBib29sZWFuIHtcclxuICByZXR1cm4gdXNlci5pc1BhaWRcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNhbkFjY2Vzc1ByZW1pdW1GZWF0dXJlcyh1c2VyOiBVc2VyKTogYm9vbGVhbiB7XHJcbiAgcmV0dXJuIHVzZXIuaXNQYWlkXHJcbn1cclxuIl0sIm5hbWVzIjpbIkNyZWRlbnRpYWxzUHJvdmlkZXIiLCJHb29nbGVQcm92aWRlciIsImhhc2giLCJkYkFkYXB0ZXIiLCJhdXRoT3B0aW9ucyIsInByb3ZpZGVycyIsImNsaWVudElkIiwicHJvY2VzcyIsImVudiIsIkdPT0dMRV9DTElFTlRfSUQiLCJjbGllbnRTZWNyZXQiLCJHT09HTEVfQ0xJRU5UX1NFQ1JFVCIsIm5hbWUiLCJjcmVkZW50aWFscyIsImVtYWlsIiwibGFiZWwiLCJ0eXBlIiwicGFzc3dvcmQiLCJvcHRpb25hbCIsImlzU2lnblVwIiwiYXV0aG9yaXplIiwiZXhpc3RpbmdVc2VyIiwiZ2V0VXNlckJ5RW1haWwiLCJFcnJvciIsImhhc2hlZFBhc3N3b3JkIiwibmV3VXNlciIsImNyZWF0ZVVzZXIiLCJzcGxpdCIsImlzX3BhaWQiLCJjcmVhdGVVc2VyUHJlZmVyZW5jZXMiLCJpZCIsImlzUGFpZCIsInVzZXJQcm9maWxlIiwiY2FsbGJhY2tzIiwiand0IiwidG9rZW4iLCJ1c2VyIiwiYWNjb3VudCIsInByb3ZpZGVyIiwiaW1hZ2UiLCJ1bmRlZmluZWQiLCJzZXNzaW9uIiwic3ViIiwicGFnZXMiLCJzaWduSW4iLCJzdHJhdGVneSIsImNyZWF0ZWRBdCIsImNyZWF0ZWRfYXQiLCJ1cGRhdGVVc2VyUGF5bWVudFN0YXR1cyIsInVzZXJJZCIsInVwZGF0ZVVzZXIiLCJpc1ByZW1pdW1Vc2VyIiwiY2FuQWNjZXNzUHJlbWl1bUZlYXR1cmVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/auth.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/database/adapter.ts":
/*!*************************************!*\
  !*** ./src/lib/database/adapter.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DatabaseAdapter: () => (/* binding */ DatabaseAdapter),\n/* harmony export */   dbAdapter: () => (/* binding */ dbAdapter)\n/* harmony export */ });\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ \"(rsc)/./src/lib/database/config.ts\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm/v4.js\");\n// Database Adapter Service - Replaces Supabase with Plesk MySQL\n// Provides the same interface as Supabase for seamless migration\n\n\nclass DatabaseAdapter {\n    static getInstance() {\n        if (!DatabaseAdapter.instance) {\n            DatabaseAdapter.instance = new DatabaseAdapter();\n        }\n        return DatabaseAdapter.instance;\n    }\n    // User Management\n    async createUser(userData) {\n        const id = (0,uuid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n        const now = new Date().toISOString();\n        await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`INSERT INTO users (id, email, name, image, is_paid, created_at, updated_at) \r\n       VALUES (?, ?, ?, ?, ?, ?, ?)`, [\n            id,\n            userData.email,\n            userData.name,\n            userData.image,\n            userData.is_paid,\n            now,\n            now\n        ]);\n        return {\n            id,\n            ...userData,\n            created_at: now,\n            updated_at: now\n        };\n    }\n    async getUserById(id) {\n        return await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.queryOne(\"SELECT * FROM users WHERE id = ?\", [\n            id\n        ]);\n    }\n    async getUserByEmail(email) {\n        return await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.queryOne(\"SELECT * FROM users WHERE email = ?\", [\n            email\n        ]);\n    }\n    async updateUser(id, updates) {\n        const setClause = Object.keys(updates).map((key)=>`${key} = ?`).join(\", \");\n        const values = [\n            ...Object.values(updates),\n            new Date().toISOString(),\n            id\n        ];\n        await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`UPDATE users SET ${setClause}, updated_at = ? WHERE id = ?`, values);\n        return await this.getUserById(id);\n    }\n    async deleteUser(id) {\n        const result = await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(\"DELETE FROM users WHERE id = ?\", [\n            id\n        ]);\n        return result.affectedRows > 0;\n    }\n    // Subscription Management\n    async createSubscription(subscriptionData) {\n        const id = (0,uuid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n        const now = new Date().toISOString();\n        await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`INSERT INTO subscriptions (id, user_id, name, amount, currency, billing_cycle, \r\n       next_billing_date, status, category, description, website_url, cancel_url, created_at, updated_at) \r\n       VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`, [\n            id,\n            subscriptionData.user_id,\n            subscriptionData.name,\n            subscriptionData.amount,\n            subscriptionData.currency,\n            subscriptionData.billing_cycle,\n            subscriptionData.next_billing_date,\n            subscriptionData.status,\n            subscriptionData.category,\n            subscriptionData.description,\n            subscriptionData.website_url,\n            subscriptionData.cancel_url,\n            now,\n            now\n        ]);\n        return {\n            id,\n            ...subscriptionData,\n            created_at: now,\n            updated_at: now\n        };\n    }\n    async getSubscriptionsByUserId(userId) {\n        return await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(\"SELECT * FROM subscriptions WHERE user_id = ? ORDER BY created_at DESC\", [\n            userId\n        ]);\n    }\n    async getSubscriptionById(id) {\n        return await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.queryOne(\"SELECT * FROM subscriptions WHERE id = ?\", [\n            id\n        ]);\n    }\n    async updateSubscription(id, updates) {\n        const setClause = Object.keys(updates).map((key)=>`${key} = ?`).join(\", \");\n        const values = [\n            ...Object.values(updates),\n            new Date().toISOString(),\n            id\n        ];\n        await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`UPDATE subscriptions SET ${setClause}, updated_at = ? WHERE id = ?`, values);\n        return await this.getSubscriptionById(id);\n    }\n    async deleteSubscription(id) {\n        const result = await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(\"DELETE FROM subscriptions WHERE id = ?\", [\n            id\n        ]);\n        return result.affectedRows > 0;\n    }\n    async getActiveSubscriptions() {\n        return await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(\"SELECT * FROM subscriptions WHERE status = 'active' ORDER BY next_billing_date ASC\");\n    }\n    async getSubscriptionsDueForReminder(days) {\n        return await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`SELECT s.*, u.email, u.name as user_name \r\n       FROM subscriptions s \r\n       JOIN users u ON s.user_id = u.id \r\n       WHERE s.status = 'active' \r\n       AND s.next_billing_date = DATE_ADD(CURDATE(), INTERVAL ? DAY)`, [\n            days\n        ]);\n    }\n    // User Preferences Management\n    async createUserPreferences(userId, preferences) {\n        const now = new Date().toISOString();\n        const defaultPrefs = {\n            reminder_days: [\n                1,\n                3,\n                7\n            ],\n            reminder_frequency: \"once\",\n            preferred_time: \"09:00:00\",\n            email_welcome: true,\n            email_upgrade: true,\n            email_bank_scan: true,\n            email_reminders: true,\n            ...preferences\n        };\n        await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`INSERT INTO user_preferences (user_id, reminder_days, reminder_frequency, preferred_time,\r\n       email_welcome, email_upgrade, email_bank_scan, email_reminders, created_at, updated_at)\r\n       VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`, [\n            userId,\n            JSON.stringify(defaultPrefs.reminder_days),\n            defaultPrefs.reminder_frequency,\n            defaultPrefs.preferred_time,\n            defaultPrefs.email_welcome,\n            defaultPrefs.email_upgrade,\n            defaultPrefs.email_bank_scan,\n            defaultPrefs.email_reminders,\n            now,\n            now\n        ]);\n        const result = await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.queryOne(\"SELECT * FROM user_preferences WHERE user_id = ?\", [\n            userId\n        ]);\n        if (result) {\n            result.reminder_days = JSON.parse(result.reminder_days);\n        }\n        return result;\n    }\n    async getUserPreferences(userId) {\n        const result = await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.queryOne(\"SELECT * FROM user_preferences WHERE user_id = ?\", [\n            userId\n        ]);\n        if (result) {\n            result.reminder_days = JSON.parse(result.reminder_days);\n        }\n        return result;\n    }\n    async updateUserPreferences(userId, updates) {\n        const updateData = {\n            ...updates\n        };\n        if (updateData.reminder_days) {\n            updateData.reminder_days = JSON.stringify(updateData.reminder_days);\n        }\n        const setClause = Object.keys(updateData).map((key)=>`${key} = ?`).join(\", \");\n        const values = [\n            ...Object.values(updateData),\n            new Date().toISOString(),\n            userId\n        ];\n        await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`UPDATE user_preferences SET ${setClause}, updated_at = ? WHERE user_id = ?`, values);\n        return await this.getUserPreferences(userId);\n    }\n    // Reminder Logs Management\n    async createReminderLog(logData) {\n        const now = new Date().toISOString();\n        const result = await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`INSERT INTO reminder_logs (user_id, subscription_id, days_before_renewal, email_sent, error_message, sent_at)\r\n       VALUES (?, ?, ?, ?, ?, ?)`, [\n            logData.user_id,\n            logData.subscription_id,\n            logData.days_before_renewal,\n            logData.email_sent,\n            logData.error_message,\n            now\n        ]);\n        return {\n            id: result.insertId,\n            ...logData,\n            sent_at: now\n        };\n    }\n    async getReminderLogs(userId, limit = 50) {\n        return await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(`SELECT rl.*, s.name as subscription_name \r\n       FROM reminder_logs rl \r\n       JOIN subscriptions s ON rl.subscription_id = s.id \r\n       WHERE rl.user_id = ? \r\n       ORDER BY rl.sent_at DESC \r\n       LIMIT ?`, [\n            userId,\n            limit\n        ]);\n    }\n    async cleanupOldReminderLogs(daysOld = 90) {\n        const result = await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.query(\"DELETE FROM reminder_logs WHERE sent_at < DATE_SUB(NOW(), INTERVAL ? DAY)\", [\n            daysOld\n        ]);\n        return result.affectedRows;\n    }\n    // Analytics and Statistics\n    async getUserStats(userId) {\n        const stats = await _config__WEBPACK_IMPORTED_MODULE_0__.databaseService.queryOne(`SELECT \r\n        COUNT(*) as totalSubscriptions,\r\n        SUM(CASE WHEN status = 'active' THEN 1 ELSE 0 END) as activeSubscriptions,\r\n        SUM(CASE WHEN status = 'active' AND billing_cycle = 'monthly' THEN amount ELSE 0 END) as monthlyTotal,\r\n        SUM(CASE WHEN status = 'active' AND billing_cycle = 'yearly' THEN amount ELSE 0 END) as yearlyTotal,\r\n        AVG(CASE WHEN status = 'active' AND billing_cycle = 'monthly' THEN amount ELSE NULL END) as avgMonthlySpend\r\n       FROM subscriptions \r\n       WHERE user_id = ?`, [\n            userId\n        ]);\n        return {\n            totalSubscriptions: stats?.totalSubscriptions || 0,\n            activeSubscriptions: stats?.activeSubscriptions || 0,\n            monthlyTotal: stats?.monthlyTotal || 0,\n            yearlyTotal: stats?.yearlyTotal || 0,\n            avgMonthlySpend: stats?.avgMonthlySpend || 0\n        };\n    }\n}\n// Singleton instance\nconst dbAdapter = DatabaseAdapter.getInstance();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFNb0MsUUFBUSxNQUFNbkYsb0RBQWVBLENBQUNvQixRQUFRLENBQzFDLENBQUM7Ozs7Ozs7d0JBT2lCLENBQUMsRUFDbkI7WUFBQzJCO1NBQU87UUFHVixPQUFPO1lBQ0xxQyxvQkFBb0JELE9BQU9DLHNCQUFzQjtZQUNqREMscUJBQXFCRixPQUFPRSx1QkFBdUI7WUFDbkRDLGNBQWNILE9BQU9HLGdCQUFnQjtZQUNyQ0MsYUFBYUosT0FBT0ksZUFBZTtZQUNuQ0MsaUJBQWlCTCxPQUFPSyxtQkFBbUI7UUFDN0M7SUFDRjtBQUNGO0FBRUEscUJBQXFCO0FBQ2QsTUFBTUMsWUFBWXRGLGdCQUFnQkMsV0FBVyxHQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2FzaGNvbnRyb2wvLi9zcmMvbGliL2RhdGFiYXNlL2FkYXB0ZXIudHM/NDBkZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBEYXRhYmFzZSBBZGFwdGVyIFNlcnZpY2UgLSBSZXBsYWNlcyBTdXBhYmFzZSB3aXRoIFBsZXNrIE15U1FMXHJcbi8vIFByb3ZpZGVzIHRoZSBzYW1lIGludGVyZmFjZSBhcyBTdXBhYmFzZSBmb3Igc2VhbWxlc3MgbWlncmF0aW9uXHJcblxyXG5pbXBvcnQgeyBkYXRhYmFzZVNlcnZpY2UgfSBmcm9tICcuL2NvbmZpZydcclxuaW1wb3J0IHsgdjQgYXMgdXVpZHY0IH0gZnJvbSAndXVpZCdcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgVXNlciB7XHJcbiAgaWQ6IHN0cmluZ1xyXG4gIGVtYWlsOiBzdHJpbmdcclxuICBuYW1lPzogc3RyaW5nXHJcbiAgaW1hZ2U/OiBzdHJpbmdcclxuICBpc19wYWlkOiBib29sZWFuXHJcbiAgY3JlYXRlZF9hdDogc3RyaW5nXHJcbiAgdXBkYXRlZF9hdDogc3RyaW5nXHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3Vic2NyaXB0aW9uIHtcclxuICBpZDogc3RyaW5nXHJcbiAgdXNlcl9pZDogc3RyaW5nXHJcbiAgbmFtZTogc3RyaW5nXHJcbiAgYW1vdW50OiBudW1iZXJcclxuICBjdXJyZW5jeTogc3RyaW5nXHJcbiAgYmlsbGluZ19jeWNsZTogJ21vbnRobHknIHwgJ3llYXJseScgfCAnd2Vla2x5JyB8ICdkYWlseSdcclxuICBuZXh0X2JpbGxpbmdfZGF0ZT86IHN0cmluZ1xyXG4gIHN0YXR1czogJ2FjdGl2ZScgfCAnY2FuY2VsbGVkJyB8ICdwYXVzZWQnXHJcbiAgY2F0ZWdvcnk/OiBzdHJpbmdcclxuICBkZXNjcmlwdGlvbj86IHN0cmluZ1xyXG4gIHdlYnNpdGVfdXJsPzogc3RyaW5nXHJcbiAgY2FuY2VsX3VybD86IHN0cmluZ1xyXG4gIGNyZWF0ZWRfYXQ6IHN0cmluZ1xyXG4gIHVwZGF0ZWRfYXQ6IHN0cmluZ1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFVzZXJQcmVmZXJlbmNlcyB7XHJcbiAgaWQ6IG51bWJlclxyXG4gIHVzZXJfaWQ6IHN0cmluZ1xyXG4gIHJlbWluZGVyX2RheXM6IG51bWJlcltdXHJcbiAgcmVtaW5kZXJfZnJlcXVlbmN5OiAnb25jZScgfCAnZGFpbHknIHwgJ3dlZWtseSdcclxuICBwcmVmZXJyZWRfdGltZTogc3RyaW5nXHJcbiAgZW1haWxfd2VsY29tZTogYm9vbGVhblxyXG4gIGVtYWlsX3VwZ3JhZGU6IGJvb2xlYW5cclxuICBlbWFpbF9iYW5rX3NjYW46IGJvb2xlYW5cclxuICBlbWFpbF9yZW1pbmRlcnM6IGJvb2xlYW5cclxuICBjcmVhdGVkX2F0OiBzdHJpbmdcclxuICB1cGRhdGVkX2F0OiBzdHJpbmdcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBSZW1pbmRlckxvZyB7XHJcbiAgaWQ6IG51bWJlclxyXG4gIHVzZXJfaWQ6IHN0cmluZ1xyXG4gIHN1YnNjcmlwdGlvbl9pZDogc3RyaW5nXHJcbiAgc2VudF9hdDogc3RyaW5nXHJcbiAgZGF5c19iZWZvcmVfcmVuZXdhbDogbnVtYmVyXHJcbiAgZW1haWxfc2VudDogYm9vbGVhblxyXG4gIGVycm9yX21lc3NhZ2U/OiBzdHJpbmdcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIERhdGFiYXNlQWRhcHRlciB7XHJcbiAgcHJpdmF0ZSBzdGF0aWMgaW5zdGFuY2U6IERhdGFiYXNlQWRhcHRlclxyXG5cclxuICBwdWJsaWMgc3RhdGljIGdldEluc3RhbmNlKCk6IERhdGFiYXNlQWRhcHRlciB7XHJcbiAgICBpZiAoIURhdGFiYXNlQWRhcHRlci5pbnN0YW5jZSkge1xyXG4gICAgICBEYXRhYmFzZUFkYXB0ZXIuaW5zdGFuY2UgPSBuZXcgRGF0YWJhc2VBZGFwdGVyKClcclxuICAgIH1cclxuICAgIHJldHVybiBEYXRhYmFzZUFkYXB0ZXIuaW5zdGFuY2VcclxuICB9XHJcblxyXG4gIC8vIFVzZXIgTWFuYWdlbWVudFxyXG4gIGFzeW5jIGNyZWF0ZVVzZXIodXNlckRhdGE6IE9taXQ8VXNlciwgJ2lkJyB8ICdjcmVhdGVkX2F0JyB8ICd1cGRhdGVkX2F0Jz4pOiBQcm9taXNlPFVzZXI+IHtcclxuICAgIGNvbnN0IGlkID0gdXVpZHY0KClcclxuICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxyXG4gICAgXHJcbiAgICBhd2FpdCBkYXRhYmFzZVNlcnZpY2UucXVlcnkoXHJcbiAgICAgIGBJTlNFUlQgSU5UTyB1c2VycyAoaWQsIGVtYWlsLCBuYW1lLCBpbWFnZSwgaXNfcGFpZCwgY3JlYXRlZF9hdCwgdXBkYXRlZF9hdCkgXHJcbiAgICAgICBWQUxVRVMgKD8sID8sID8sID8sID8sID8sID8pYCxcclxuICAgICAgW2lkLCB1c2VyRGF0YS5lbWFpbCwgdXNlckRhdGEubmFtZSwgdXNlckRhdGEuaW1hZ2UsIHVzZXJEYXRhLmlzX3BhaWQsIG5vdywgbm93XVxyXG4gICAgKVxyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgIGlkLFxyXG4gICAgICAuLi51c2VyRGF0YSxcclxuICAgICAgY3JlYXRlZF9hdDogbm93LFxyXG4gICAgICB1cGRhdGVkX2F0OiBub3dcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGFzeW5jIGdldFVzZXJCeUlkKGlkOiBzdHJpbmcpOiBQcm9taXNlPFVzZXIgfCBudWxsPiB7XHJcbiAgICByZXR1cm4gYXdhaXQgZGF0YWJhc2VTZXJ2aWNlLnF1ZXJ5T25lPFVzZXI+KFxyXG4gICAgICAnU0VMRUNUICogRlJPTSB1c2VycyBXSEVSRSBpZCA9ID8nLFxyXG4gICAgICBbaWRdXHJcbiAgICApXHJcbiAgfVxyXG5cclxuICBhc3luYyBnZXRVc2VyQnlFbWFpbChlbWFpbDogc3RyaW5nKTogUHJvbWlzZTxVc2VyIHwgbnVsbD4ge1xyXG4gICAgcmV0dXJuIGF3YWl0IGRhdGFiYXNlU2VydmljZS5xdWVyeU9uZTxVc2VyPihcclxuICAgICAgJ1NFTEVDVCAqIEZST00gdXNlcnMgV0hFUkUgZW1haWwgPSA/JyxcclxuICAgICAgW2VtYWlsXVxyXG4gICAgKVxyXG4gIH1cclxuXHJcbiAgYXN5bmMgdXBkYXRlVXNlcihpZDogc3RyaW5nLCB1cGRhdGVzOiBQYXJ0aWFsPE9taXQ8VXNlciwgJ2lkJyB8ICdjcmVhdGVkX2F0Jz4+KTogUHJvbWlzZTxVc2VyIHwgbnVsbD4ge1xyXG4gICAgY29uc3Qgc2V0Q2xhdXNlID0gT2JqZWN0LmtleXModXBkYXRlcykubWFwKGtleSA9PiBgJHtrZXl9ID0gP2ApLmpvaW4oJywgJylcclxuICAgIGNvbnN0IHZhbHVlcyA9IFsuLi5PYmplY3QudmFsdWVzKHVwZGF0ZXMpLCBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksIGlkXVxyXG4gICAgXHJcbiAgICBhd2FpdCBkYXRhYmFzZVNlcnZpY2UucXVlcnkoXHJcbiAgICAgIGBVUERBVEUgdXNlcnMgU0VUICR7c2V0Q2xhdXNlfSwgdXBkYXRlZF9hdCA9ID8gV0hFUkUgaWQgPSA/YCxcclxuICAgICAgdmFsdWVzXHJcbiAgICApXHJcblxyXG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuZ2V0VXNlckJ5SWQoaWQpXHJcbiAgfVxyXG5cclxuICBhc3luYyBkZWxldGVVc2VyKGlkOiBzdHJpbmcpOiBQcm9taXNlPGJvb2xlYW4+IHtcclxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGRhdGFiYXNlU2VydmljZS5xdWVyeShcclxuICAgICAgJ0RFTEVURSBGUk9NIHVzZXJzIFdIRVJFIGlkID0gPycsXHJcbiAgICAgIFtpZF1cclxuICAgIClcclxuICAgIHJldHVybiAocmVzdWx0IGFzIGFueSkuYWZmZWN0ZWRSb3dzID4gMFxyXG4gIH1cclxuXHJcbiAgLy8gU3Vic2NyaXB0aW9uIE1hbmFnZW1lbnRcclxuICBhc3luYyBjcmVhdGVTdWJzY3JpcHRpb24oc3Vic2NyaXB0aW9uRGF0YTogT21pdDxTdWJzY3JpcHRpb24sICdpZCcgfCAnY3JlYXRlZF9hdCcgfCAndXBkYXRlZF9hdCc+KTogUHJvbWlzZTxTdWJzY3JpcHRpb24+IHtcclxuICAgIGNvbnN0IGlkID0gdXVpZHY0KClcclxuICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxyXG4gICAgXHJcbiAgICBhd2FpdCBkYXRhYmFzZVNlcnZpY2UucXVlcnkoXHJcbiAgICAgIGBJTlNFUlQgSU5UTyBzdWJzY3JpcHRpb25zIChpZCwgdXNlcl9pZCwgbmFtZSwgYW1vdW50LCBjdXJyZW5jeSwgYmlsbGluZ19jeWNsZSwgXHJcbiAgICAgICBuZXh0X2JpbGxpbmdfZGF0ZSwgc3RhdHVzLCBjYXRlZ29yeSwgZGVzY3JpcHRpb24sIHdlYnNpdGVfdXJsLCBjYW5jZWxfdXJsLCBjcmVhdGVkX2F0LCB1cGRhdGVkX2F0KSBcclxuICAgICAgIFZBTFVFUyAoPywgPywgPywgPywgPywgPywgPywgPywgPywgPywgPywgPywgPywgPylgLFxyXG4gICAgICBbXHJcbiAgICAgICAgaWQsIHN1YnNjcmlwdGlvbkRhdGEudXNlcl9pZCwgc3Vic2NyaXB0aW9uRGF0YS5uYW1lLCBzdWJzY3JpcHRpb25EYXRhLmFtb3VudCxcclxuICAgICAgICBzdWJzY3JpcHRpb25EYXRhLmN1cnJlbmN5LCBzdWJzY3JpcHRpb25EYXRhLmJpbGxpbmdfY3ljbGUsIHN1YnNjcmlwdGlvbkRhdGEubmV4dF9iaWxsaW5nX2RhdGUsXHJcbiAgICAgICAgc3Vic2NyaXB0aW9uRGF0YS5zdGF0dXMsIHN1YnNjcmlwdGlvbkRhdGEuY2F0ZWdvcnksIHN1YnNjcmlwdGlvbkRhdGEuZGVzY3JpcHRpb24sXHJcbiAgICAgICAgc3Vic2NyaXB0aW9uRGF0YS53ZWJzaXRlX3VybCwgc3Vic2NyaXB0aW9uRGF0YS5jYW5jZWxfdXJsLCBub3csIG5vd1xyXG4gICAgICBdXHJcbiAgICApXHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgaWQsXHJcbiAgICAgIC4uLnN1YnNjcmlwdGlvbkRhdGEsXHJcbiAgICAgIGNyZWF0ZWRfYXQ6IG5vdyxcclxuICAgICAgdXBkYXRlZF9hdDogbm93XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBhc3luYyBnZXRTdWJzY3JpcHRpb25zQnlVc2VySWQodXNlcklkOiBzdHJpbmcpOiBQcm9taXNlPFN1YnNjcmlwdGlvbltdPiB7XHJcbiAgICByZXR1cm4gYXdhaXQgZGF0YWJhc2VTZXJ2aWNlLnF1ZXJ5PFN1YnNjcmlwdGlvbj4oXHJcbiAgICAgICdTRUxFQ1QgKiBGUk9NIHN1YnNjcmlwdGlvbnMgV0hFUkUgdXNlcl9pZCA9ID8gT1JERVIgQlkgY3JlYXRlZF9hdCBERVNDJyxcclxuICAgICAgW3VzZXJJZF1cclxuICAgIClcclxuICB9XHJcblxyXG4gIGFzeW5jIGdldFN1YnNjcmlwdGlvbkJ5SWQoaWQ6IHN0cmluZyk6IFByb21pc2U8U3Vic2NyaXB0aW9uIHwgbnVsbD4ge1xyXG4gICAgcmV0dXJuIGF3YWl0IGRhdGFiYXNlU2VydmljZS5xdWVyeU9uZTxTdWJzY3JpcHRpb24+KFxyXG4gICAgICAnU0VMRUNUICogRlJPTSBzdWJzY3JpcHRpb25zIFdIRVJFIGlkID0gPycsXHJcbiAgICAgIFtpZF1cclxuICAgIClcclxuICB9XHJcblxyXG4gIGFzeW5jIHVwZGF0ZVN1YnNjcmlwdGlvbihpZDogc3RyaW5nLCB1cGRhdGVzOiBQYXJ0aWFsPE9taXQ8U3Vic2NyaXB0aW9uLCAnaWQnIHwgJ2NyZWF0ZWRfYXQnPj4pOiBQcm9taXNlPFN1YnNjcmlwdGlvbiB8IG51bGw+IHtcclxuICAgIGNvbnN0IHNldENsYXVzZSA9IE9iamVjdC5rZXlzKHVwZGF0ZXMpLm1hcChrZXkgPT4gYCR7a2V5fSA9ID9gKS5qb2luKCcsICcpXHJcbiAgICBjb25zdCB2YWx1ZXMgPSBbLi4uT2JqZWN0LnZhbHVlcyh1cGRhdGVzKSwgbmV3IERhdGUoKS50b0lTT1N0cmluZygpLCBpZF1cclxuICAgIFxyXG4gICAgYXdhaXQgZGF0YWJhc2VTZXJ2aWNlLnF1ZXJ5KFxyXG4gICAgICBgVVBEQVRFIHN1YnNjcmlwdGlvbnMgU0VUICR7c2V0Q2xhdXNlfSwgdXBkYXRlZF9hdCA9ID8gV0hFUkUgaWQgPSA/YCxcclxuICAgICAgdmFsdWVzXHJcbiAgICApXHJcblxyXG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuZ2V0U3Vic2NyaXB0aW9uQnlJZChpZClcclxuICB9XHJcblxyXG4gIGFzeW5jIGRlbGV0ZVN1YnNjcmlwdGlvbihpZDogc3RyaW5nKTogUHJvbWlzZTxib29sZWFuPiB7XHJcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBkYXRhYmFzZVNlcnZpY2UucXVlcnkoXHJcbiAgICAgICdERUxFVEUgRlJPTSBzdWJzY3JpcHRpb25zIFdIRVJFIGlkID0gPycsXHJcbiAgICAgIFtpZF1cclxuICAgIClcclxuICAgIHJldHVybiAocmVzdWx0IGFzIGFueSkuYWZmZWN0ZWRSb3dzID4gMFxyXG4gIH1cclxuXHJcbiAgYXN5bmMgZ2V0QWN0aXZlU3Vic2NyaXB0aW9ucygpOiBQcm9taXNlPFN1YnNjcmlwdGlvbltdPiB7XHJcbiAgICByZXR1cm4gYXdhaXQgZGF0YWJhc2VTZXJ2aWNlLnF1ZXJ5PFN1YnNjcmlwdGlvbj4oXHJcbiAgICAgIFwiU0VMRUNUICogRlJPTSBzdWJzY3JpcHRpb25zIFdIRVJFIHN0YXR1cyA9ICdhY3RpdmUnIE9SREVSIEJZIG5leHRfYmlsbGluZ19kYXRlIEFTQ1wiXHJcbiAgICApXHJcbiAgfVxyXG5cclxuICBhc3luYyBnZXRTdWJzY3JpcHRpb25zRHVlRm9yUmVtaW5kZXIoZGF5czogbnVtYmVyKTogUHJvbWlzZTxTdWJzY3JpcHRpb25bXT4ge1xyXG4gICAgcmV0dXJuIGF3YWl0IGRhdGFiYXNlU2VydmljZS5xdWVyeTxTdWJzY3JpcHRpb24+KFxyXG4gICAgICBgU0VMRUNUIHMuKiwgdS5lbWFpbCwgdS5uYW1lIGFzIHVzZXJfbmFtZSBcclxuICAgICAgIEZST00gc3Vic2NyaXB0aW9ucyBzIFxyXG4gICAgICAgSk9JTiB1c2VycyB1IE9OIHMudXNlcl9pZCA9IHUuaWQgXHJcbiAgICAgICBXSEVSRSBzLnN0YXR1cyA9ICdhY3RpdmUnIFxyXG4gICAgICAgQU5EIHMubmV4dF9iaWxsaW5nX2RhdGUgPSBEQVRFX0FERChDVVJEQVRFKCksIElOVEVSVkFMID8gREFZKWAsXHJcbiAgICAgIFtkYXlzXVxyXG4gICAgKVxyXG4gIH1cclxuXHJcbiAgLy8gVXNlciBQcmVmZXJlbmNlcyBNYW5hZ2VtZW50XHJcbiAgYXN5bmMgY3JlYXRlVXNlclByZWZlcmVuY2VzKHVzZXJJZDogc3RyaW5nLCBwcmVmZXJlbmNlczogUGFydGlhbDxPbWl0PFVzZXJQcmVmZXJlbmNlcywgJ2lkJyB8ICd1c2VyX2lkJyB8ICdjcmVhdGVkX2F0JyB8ICd1cGRhdGVkX2F0Jz4+KTogUHJvbWlzZTxVc2VyUHJlZmVyZW5jZXM+IHtcclxuICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxyXG4gICAgY29uc3QgZGVmYXVsdFByZWZzID0ge1xyXG4gICAgICByZW1pbmRlcl9kYXlzOiBbMSwgMywgN10sXHJcbiAgICAgIHJlbWluZGVyX2ZyZXF1ZW5jeTogJ29uY2UnIGFzIGNvbnN0LFxyXG4gICAgICBwcmVmZXJyZWRfdGltZTogJzA5OjAwOjAwJyxcclxuICAgICAgZW1haWxfd2VsY29tZTogdHJ1ZSxcclxuICAgICAgZW1haWxfdXBncmFkZTogdHJ1ZSxcclxuICAgICAgZW1haWxfYmFua19zY2FuOiB0cnVlLFxyXG4gICAgICBlbWFpbF9yZW1pbmRlcnM6IHRydWUsXHJcbiAgICAgIC4uLnByZWZlcmVuY2VzXHJcbiAgICB9XHJcblxyXG4gICAgYXdhaXQgZGF0YWJhc2VTZXJ2aWNlLnF1ZXJ5KFxyXG4gICAgICBgSU5TRVJUIElOVE8gdXNlcl9wcmVmZXJlbmNlcyAodXNlcl9pZCwgcmVtaW5kZXJfZGF5cywgcmVtaW5kZXJfZnJlcXVlbmN5LCBwcmVmZXJyZWRfdGltZSxcclxuICAgICAgIGVtYWlsX3dlbGNvbWUsIGVtYWlsX3VwZ3JhZGUsIGVtYWlsX2Jhbmtfc2NhbiwgZW1haWxfcmVtaW5kZXJzLCBjcmVhdGVkX2F0LCB1cGRhdGVkX2F0KVxyXG4gICAgICAgVkFMVUVTICg/LCA/LCA/LCA/LCA/LCA/LCA/LCA/LCA/LCA/KWAsXHJcbiAgICAgIFtcclxuICAgICAgICB1c2VySWQsIEpTT04uc3RyaW5naWZ5KGRlZmF1bHRQcmVmcy5yZW1pbmRlcl9kYXlzKSwgZGVmYXVsdFByZWZzLnJlbWluZGVyX2ZyZXF1ZW5jeSxcclxuICAgICAgICBkZWZhdWx0UHJlZnMucHJlZmVycmVkX3RpbWUsIGRlZmF1bHRQcmVmcy5lbWFpbF93ZWxjb21lLCBkZWZhdWx0UHJlZnMuZW1haWxfdXBncmFkZSxcclxuICAgICAgICBkZWZhdWx0UHJlZnMuZW1haWxfYmFua19zY2FuLCBkZWZhdWx0UHJlZnMuZW1haWxfcmVtaW5kZXJzLCBub3csIG5vd1xyXG4gICAgICBdXHJcbiAgICApXHJcblxyXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZGF0YWJhc2VTZXJ2aWNlLnF1ZXJ5T25lPFVzZXJQcmVmZXJlbmNlcz4oXHJcbiAgICAgICdTRUxFQ1QgKiBGUk9NIHVzZXJfcHJlZmVyZW5jZXMgV0hFUkUgdXNlcl9pZCA9ID8nLFxyXG4gICAgICBbdXNlcklkXVxyXG4gICAgKVxyXG5cclxuICAgIGlmIChyZXN1bHQpIHtcclxuICAgICAgcmVzdWx0LnJlbWluZGVyX2RheXMgPSBKU09OLnBhcnNlKHJlc3VsdC5yZW1pbmRlcl9kYXlzIGFzIGFueSlcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gcmVzdWx0IVxyXG4gIH1cclxuXHJcbiAgYXN5bmMgZ2V0VXNlclByZWZlcmVuY2VzKHVzZXJJZDogc3RyaW5nKTogUHJvbWlzZTxVc2VyUHJlZmVyZW5jZXMgfCBudWxsPiB7XHJcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBkYXRhYmFzZVNlcnZpY2UucXVlcnlPbmU8VXNlclByZWZlcmVuY2VzPihcclxuICAgICAgJ1NFTEVDVCAqIEZST00gdXNlcl9wcmVmZXJlbmNlcyBXSEVSRSB1c2VyX2lkID0gPycsXHJcbiAgICAgIFt1c2VySWRdXHJcbiAgICApXHJcblxyXG4gICAgaWYgKHJlc3VsdCkge1xyXG4gICAgICByZXN1bHQucmVtaW5kZXJfZGF5cyA9IEpTT04ucGFyc2UocmVzdWx0LnJlbWluZGVyX2RheXMgYXMgYW55KVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiByZXN1bHRcclxuICB9XHJcblxyXG4gIGFzeW5jIHVwZGF0ZVVzZXJQcmVmZXJlbmNlcyh1c2VySWQ6IHN0cmluZywgdXBkYXRlczogUGFydGlhbDxPbWl0PFVzZXJQcmVmZXJlbmNlcywgJ2lkJyB8ICd1c2VyX2lkJyB8ICdjcmVhdGVkX2F0Jz4+KTogUHJvbWlzZTxVc2VyUHJlZmVyZW5jZXMgfCBudWxsPiB7XHJcbiAgICBjb25zdCB1cGRhdGVEYXRhID0geyAuLi51cGRhdGVzIH1cclxuICAgIGlmICh1cGRhdGVEYXRhLnJlbWluZGVyX2RheXMpIHtcclxuICAgICAgKHVwZGF0ZURhdGEgYXMgYW55KS5yZW1pbmRlcl9kYXlzID0gSlNPTi5zdHJpbmdpZnkodXBkYXRlRGF0YS5yZW1pbmRlcl9kYXlzKVxyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHNldENsYXVzZSA9IE9iamVjdC5rZXlzKHVwZGF0ZURhdGEpLm1hcChrZXkgPT4gYCR7a2V5fSA9ID9gKS5qb2luKCcsICcpXHJcbiAgICBjb25zdCB2YWx1ZXMgPSBbLi4uT2JqZWN0LnZhbHVlcyh1cGRhdGVEYXRhKSwgbmV3IERhdGUoKS50b0lTT1N0cmluZygpLCB1c2VySWRdXHJcbiAgICBcclxuICAgIGF3YWl0IGRhdGFiYXNlU2VydmljZS5xdWVyeShcclxuICAgICAgYFVQREFURSB1c2VyX3ByZWZlcmVuY2VzIFNFVCAke3NldENsYXVzZX0sIHVwZGF0ZWRfYXQgPSA/IFdIRVJFIHVzZXJfaWQgPSA/YCxcclxuICAgICAgdmFsdWVzXHJcbiAgICApXHJcblxyXG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuZ2V0VXNlclByZWZlcmVuY2VzKHVzZXJJZClcclxuICB9XHJcblxyXG4gIC8vIFJlbWluZGVyIExvZ3MgTWFuYWdlbWVudFxyXG4gIGFzeW5jIGNyZWF0ZVJlbWluZGVyTG9nKGxvZ0RhdGE6IE9taXQ8UmVtaW5kZXJMb2csICdpZCcgfCAnc2VudF9hdCc+KTogUHJvbWlzZTxSZW1pbmRlckxvZz4ge1xyXG4gICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKS50b0lTT1N0cmluZygpXHJcbiAgICBcclxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGRhdGFiYXNlU2VydmljZS5xdWVyeShcclxuICAgICAgYElOU0VSVCBJTlRPIHJlbWluZGVyX2xvZ3MgKHVzZXJfaWQsIHN1YnNjcmlwdGlvbl9pZCwgZGF5c19iZWZvcmVfcmVuZXdhbCwgZW1haWxfc2VudCwgZXJyb3JfbWVzc2FnZSwgc2VudF9hdClcclxuICAgICAgIFZBTFVFUyAoPywgPywgPywgPywgPywgPylgLFxyXG4gICAgICBbbG9nRGF0YS51c2VyX2lkLCBsb2dEYXRhLnN1YnNjcmlwdGlvbl9pZCwgbG9nRGF0YS5kYXlzX2JlZm9yZV9yZW5ld2FsLCBsb2dEYXRhLmVtYWlsX3NlbnQsIGxvZ0RhdGEuZXJyb3JfbWVzc2FnZSwgbm93XVxyXG4gICAgKVxyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgIGlkOiAocmVzdWx0IGFzIGFueSkuaW5zZXJ0SWQsXHJcbiAgICAgIC4uLmxvZ0RhdGEsXHJcbiAgICAgIHNlbnRfYXQ6IG5vd1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgYXN5bmMgZ2V0UmVtaW5kZXJMb2dzKHVzZXJJZDogc3RyaW5nLCBsaW1pdCA9IDUwKTogUHJvbWlzZTxSZW1pbmRlckxvZ1tdPiB7XHJcbiAgICByZXR1cm4gYXdhaXQgZGF0YWJhc2VTZXJ2aWNlLnF1ZXJ5PFJlbWluZGVyTG9nPihcclxuICAgICAgYFNFTEVDVCBybC4qLCBzLm5hbWUgYXMgc3Vic2NyaXB0aW9uX25hbWUgXHJcbiAgICAgICBGUk9NIHJlbWluZGVyX2xvZ3MgcmwgXHJcbiAgICAgICBKT0lOIHN1YnNjcmlwdGlvbnMgcyBPTiBybC5zdWJzY3JpcHRpb25faWQgPSBzLmlkIFxyXG4gICAgICAgV0hFUkUgcmwudXNlcl9pZCA9ID8gXHJcbiAgICAgICBPUkRFUiBCWSBybC5zZW50X2F0IERFU0MgXHJcbiAgICAgICBMSU1JVCA/YCxcclxuICAgICAgW3VzZXJJZCwgbGltaXRdXHJcbiAgICApXHJcbiAgfVxyXG5cclxuICBhc3luYyBjbGVhbnVwT2xkUmVtaW5kZXJMb2dzKGRheXNPbGQgPSA5MCk6IFByb21pc2U8bnVtYmVyPiB7XHJcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBkYXRhYmFzZVNlcnZpY2UucXVlcnkoXHJcbiAgICAgICdERUxFVEUgRlJPTSByZW1pbmRlcl9sb2dzIFdIRVJFIHNlbnRfYXQgPCBEQVRFX1NVQihOT1coKSwgSU5URVJWQUwgPyBEQVkpJyxcclxuICAgICAgW2RheXNPbGRdXHJcbiAgICApXHJcbiAgICByZXR1cm4gKHJlc3VsdCBhcyBhbnkpLmFmZmVjdGVkUm93c1xyXG4gIH1cclxuXHJcbiAgLy8gQW5hbHl0aWNzIGFuZCBTdGF0aXN0aWNzXHJcbiAgYXN5bmMgZ2V0VXNlclN0YXRzKHVzZXJJZDogc3RyaW5nKTogUHJvbWlzZTx7XHJcbiAgICB0b3RhbFN1YnNjcmlwdGlvbnM6IG51bWJlclxyXG4gICAgYWN0aXZlU3Vic2NyaXB0aW9uczogbnVtYmVyXHJcbiAgICBtb250aGx5VG90YWw6IG51bWJlclxyXG4gICAgeWVhcmx5VG90YWw6IG51bWJlclxyXG4gICAgYXZnTW9udGhseVNwZW5kOiBudW1iZXJcclxuICB9PiB7XHJcbiAgICBjb25zdCBzdGF0cyA9IGF3YWl0IGRhdGFiYXNlU2VydmljZS5xdWVyeU9uZTxhbnk+KFxyXG4gICAgICBgU0VMRUNUIFxyXG4gICAgICAgIENPVU5UKCopIGFzIHRvdGFsU3Vic2NyaXB0aW9ucyxcclxuICAgICAgICBTVU0oQ0FTRSBXSEVOIHN0YXR1cyA9ICdhY3RpdmUnIFRIRU4gMSBFTFNFIDAgRU5EKSBhcyBhY3RpdmVTdWJzY3JpcHRpb25zLFxyXG4gICAgICAgIFNVTShDQVNFIFdIRU4gc3RhdHVzID0gJ2FjdGl2ZScgQU5EIGJpbGxpbmdfY3ljbGUgPSAnbW9udGhseScgVEhFTiBhbW91bnQgRUxTRSAwIEVORCkgYXMgbW9udGhseVRvdGFsLFxyXG4gICAgICAgIFNVTShDQVNFIFdIRU4gc3RhdHVzID0gJ2FjdGl2ZScgQU5EIGJpbGxpbmdfY3ljbGUgPSAneWVhcmx5JyBUSEVOIGFtb3VudCBFTFNFIDAgRU5EKSBhcyB5ZWFybHlUb3RhbCxcclxuICAgICAgICBBVkcoQ0FTRSBXSEVOIHN0YXR1cyA9ICdhY3RpdmUnIEFORCBiaWxsaW5nX2N5Y2xlID0gJ21vbnRobHknIFRIRU4gYW1vdW50IEVMU0UgTlVMTCBFTkQpIGFzIGF2Z01vbnRobHlTcGVuZFxyXG4gICAgICAgRlJPTSBzdWJzY3JpcHRpb25zIFxyXG4gICAgICAgV0hFUkUgdXNlcl9pZCA9ID9gLFxyXG4gICAgICBbdXNlcklkXVxyXG4gICAgKVxyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgIHRvdGFsU3Vic2NyaXB0aW9uczogc3RhdHM/LnRvdGFsU3Vic2NyaXB0aW9ucyB8fCAwLFxyXG4gICAgICBhY3RpdmVTdWJzY3JpcHRpb25zOiBzdGF0cz8uYWN0aXZlU3Vic2NyaXB0aW9ucyB8fCAwLFxyXG4gICAgICBtb250aGx5VG90YWw6IHN0YXRzPy5tb250aGx5VG90YWwgfHwgMCxcclxuICAgICAgeWVhcmx5VG90YWw6IHN0YXRzPy55ZWFybHlUb3RhbCB8fCAwLFxyXG4gICAgICBhdmdNb250aGx5U3BlbmQ6IHN0YXRzPy5hdmdNb250aGx5U3BlbmQgfHwgMFxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLy8gU2luZ2xldG9uIGluc3RhbmNlXHJcbmV4cG9ydCBjb25zdCBkYkFkYXB0ZXIgPSBEYXRhYmFzZUFkYXB0ZXIuZ2V0SW5zdGFuY2UoKVxyXG4iXSwibmFtZXMiOlsiZGF0YWJhc2VTZXJ2aWNlIiwidjQiLCJ1dWlkdjQiLCJEYXRhYmFzZUFkYXB0ZXIiLCJnZXRJbnN0YW5jZSIsImluc3RhbmNlIiwiY3JlYXRlVXNlciIsInVzZXJEYXRhIiwiaWQiLCJub3ciLCJEYXRlIiwidG9JU09TdHJpbmciLCJxdWVyeSIsImVtYWlsIiwibmFtZSIsImltYWdlIiwiaXNfcGFpZCIsImNyZWF0ZWRfYXQiLCJ1cGRhdGVkX2F0IiwiZ2V0VXNlckJ5SWQiLCJxdWVyeU9uZSIsImdldFVzZXJCeUVtYWlsIiwidXBkYXRlVXNlciIsInVwZGF0ZXMiLCJzZXRDbGF1c2UiLCJPYmplY3QiLCJrZXlzIiwibWFwIiwia2V5Iiwiam9pbiIsInZhbHVlcyIsImRlbGV0ZVVzZXIiLCJyZXN1bHQiLCJhZmZlY3RlZFJvd3MiLCJjcmVhdGVTdWJzY3JpcHRpb24iLCJzdWJzY3JpcHRpb25EYXRhIiwidXNlcl9pZCIsImFtb3VudCIsImN1cnJlbmN5IiwiYmlsbGluZ19jeWNsZSIsIm5leHRfYmlsbGluZ19kYXRlIiwic3RhdHVzIiwiY2F0ZWdvcnkiLCJkZXNjcmlwdGlvbiIsIndlYnNpdGVfdXJsIiwiY2FuY2VsX3VybCIsImdldFN1YnNjcmlwdGlvbnNCeVVzZXJJZCIsInVzZXJJZCIsImdldFN1YnNjcmlwdGlvbkJ5SWQiLCJ1cGRhdGVTdWJzY3JpcHRpb24iLCJkZWxldGVTdWJzY3JpcHRpb24iLCJnZXRBY3RpdmVTdWJzY3JpcHRpb25zIiwiZ2V0U3Vic2NyaXB0aW9uc0R1ZUZvclJlbWluZGVyIiwiZGF5cyIsImNyZWF0ZVVzZXJQcmVmZXJlbmNlcyIsInByZWZlcmVuY2VzIiwiZGVmYXVsdFByZWZzIiwicmVtaW5kZXJfZGF5cyIsInJlbWluZGVyX2ZyZXF1ZW5jeSIsInByZWZlcnJlZF90aW1lIiwiZW1haWxfd2VsY29tZSIsImVtYWlsX3VwZ3JhZGUiLCJlbWFpbF9iYW5rX3NjYW4iLCJlbWFpbF9yZW1pbmRlcnMiLCJKU09OIiwic3RyaW5naWZ5IiwicGFyc2UiLCJnZXRVc2VyUHJlZmVyZW5jZXMiLCJ1cGRhdGVVc2VyUHJlZmVyZW5jZXMiLCJ1cGRhdGVEYXRhIiwiY3JlYXRlUmVtaW5kZXJMb2ciLCJsb2dEYXRhIiwic3Vic2NyaXB0aW9uX2lkIiwiZGF5c19iZWZvcmVfcmVuZXdhbCIsImVtYWlsX3NlbnQiLCJlcnJvcl9tZXNzYWdlIiwiaW5zZXJ0SWQiLCJzZW50X2F0IiwiZ2V0UmVtaW5kZXJMb2dzIiwibGltaXQiLCJjbGVhbnVwT2xkUmVtaW5kZXJMb2dzIiwiZGF5c09sZCIsImdldFVzZXJTdGF0cyIsInN0YXRzIiwidG90YWxTdWJzY3JpcHRpb25zIiwiYWN0aXZlU3Vic2NyaXB0aW9ucyIsIm1vbnRobHlUb3RhbCIsInllYXJseVRvdGFsIiwiYXZnTW9udGhseVNwZW5kIiwiZGJBZGFwdGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/database/adapter.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/database/config.ts":
/*!************************************!*\
  !*** ./src/lib/database/config.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DatabaseService: () => (/* binding */ DatabaseService),\n/* harmony export */   databaseService: () => (/* binding */ databaseService)\n/* harmony export */ });\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mysql2/promise */ \"(rsc)/./node_modules/mysql2/promise.js\");\n// Database Configuration for Plesk MariaDB\n// Handles connection to Plesk hosting MariaDB database\n\nclass DatabaseService {\n    constructor(){\n        this.pool = null;\n        this.config = this.getDatabaseConfig();\n        this.initializePool();\n    }\n    static getInstance() {\n        if (!DatabaseService.instance) {\n            DatabaseService.instance = new DatabaseService();\n        }\n        return DatabaseService.instance;\n    }\n    getDatabaseConfig() {\n        return {\n            host: process.env.DB_HOST || \"localhost\",\n            port: parseInt(process.env.DB_PORT || \"3306\"),\n            database: process.env.DB_NAME || \"\",\n            user: process.env.DB_USER || \"\",\n            password: process.env.DB_PASSWORD || \"\",\n            connectionLimit: 10\n        };\n    }\n    initializePool() {\n        try {\n            this.pool = mysql2_promise__WEBPACK_IMPORTED_MODULE_0__.createPool({\n                host: this.config.host,\n                port: this.config.port,\n                database: this.config.database,\n                user: this.config.user,\n                password: this.config.password,\n                connectionLimit: this.config.connectionLimit,\n                charset: \"utf8mb4\",\n                // MariaDB specific optimizations\n                supportBigNumbers: true,\n                bigNumberStrings: true,\n                dateStrings: false\n            });\n            console.log(\"✅ MariaDB connection pool initialized for Plesk database\");\n        } catch (error) {\n            console.error(\"❌ Failed to initialize MariaDB connection pool:\", error);\n            throw error;\n        }\n    }\n    async testConnection() {\n        if (!this.pool) {\n            console.error(\"❌ Database pool not initialized\");\n            return false;\n        }\n        try {\n            const connection = await this.pool.getConnection();\n            await connection.ping();\n            connection.release();\n            console.log(\"✅ Database connection test successful\");\n            return true;\n        } catch (error) {\n            console.error(\"❌ Database connection test failed:\", error);\n            return false;\n        }\n    }\n    async query(sql, params) {\n        if (!this.pool) {\n            throw new Error(\"Database pool not initialized\");\n        }\n        try {\n            const [rows] = await this.pool.execute(sql, params);\n            return rows;\n        } catch (error) {\n            console.error(\"❌ Database query failed:\", error);\n            console.error(\"SQL:\", sql);\n            console.error(\"Params:\", params);\n            throw error;\n        }\n    }\n    async queryOne(sql, params) {\n        const results = await this.query(sql, params);\n        return results.length > 0 ? results[0] : null;\n    }\n    async transaction(callback) {\n        if (!this.pool) {\n            throw new Error(\"Database pool not initialized\");\n        }\n        const connection = await this.pool.getConnection();\n        try {\n            await connection.beginTransaction();\n            const result = await callback(connection);\n            await connection.commit();\n            return result;\n        } catch (error) {\n            await connection.rollback();\n            throw error;\n        } finally{\n            connection.release();\n        }\n    }\n    async closePool() {\n        if (this.pool) {\n            await this.pool.end();\n            this.pool = null;\n            console.log(\"✅ Database connection pool closed\");\n        }\n    }\n    // Helper method to create tables if they don't exist\n    async initializeTables() {\n        const createUsersTable = `\r\n      CREATE TABLE IF NOT EXISTS users (\r\n        id VARCHAR(255) PRIMARY KEY,\r\n        email VARCHAR(255) UNIQUE NOT NULL,\r\n        name VARCHAR(255),\r\n        image VARCHAR(500),\r\n        is_paid BOOLEAN DEFAULT FALSE,\r\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\r\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\r\n        INDEX idx_email (email),\r\n        INDEX idx_is_paid (is_paid)\r\n      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\r\n    `;\n        const createSubscriptionsTable = `\r\n      CREATE TABLE IF NOT EXISTS subscriptions (\r\n        id VARCHAR(255) PRIMARY KEY,\r\n        user_id VARCHAR(255) NOT NULL,\r\n        name VARCHAR(255) NOT NULL,\r\n        amount DECIMAL(10,2) NOT NULL,\r\n        currency VARCHAR(3) DEFAULT 'EUR',\r\n        billing_cycle ENUM('monthly', 'yearly', 'weekly', 'daily') DEFAULT 'monthly',\r\n        next_billing_date DATE,\r\n        status ENUM('active', 'cancelled', 'paused') DEFAULT 'active',\r\n        category VARCHAR(100),\r\n        description TEXT,\r\n        website_url VARCHAR(500),\r\n        cancel_url VARCHAR(500),\r\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\r\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\r\n        FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,\r\n        INDEX idx_user_id (user_id),\r\n        INDEX idx_status (status),\r\n        INDEX idx_next_billing_date (next_billing_date)\r\n      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\r\n    `;\n        const createUserPreferencesTable = `\r\n      CREATE TABLE IF NOT EXISTS user_preferences (\r\n        id INT AUTO_INCREMENT PRIMARY KEY,\r\n        user_id VARCHAR(255) NOT NULL,\r\n        reminder_days JSON DEFAULT '[]',\r\n        reminder_frequency ENUM('once', 'daily', 'weekly') DEFAULT 'once',\r\n        preferred_time TIME DEFAULT '09:00:00',\r\n        email_welcome BOOLEAN DEFAULT TRUE,\r\n        email_upgrade BOOLEAN DEFAULT TRUE,\r\n        email_bank_scan BOOLEAN DEFAULT TRUE,\r\n        email_reminders BOOLEAN DEFAULT TRUE,\r\n        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\r\n        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\r\n        UNIQUE KEY unique_user_prefs (user_id),\r\n        FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE\r\n      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\r\n    `;\n        const createReminderLogsTable = `\r\n      CREATE TABLE IF NOT EXISTS reminder_logs (\r\n        id INT AUTO_INCREMENT PRIMARY KEY,\r\n        user_id VARCHAR(255) NOT NULL,\r\n        subscription_id VARCHAR(255) NOT NULL,\r\n        sent_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\r\n        days_before_renewal INT NOT NULL,\r\n        email_sent BOOLEAN DEFAULT FALSE,\r\n        error_message TEXT,\r\n        INDEX idx_user_id (user_id),\r\n        INDEX idx_subscription_id (subscription_id),\r\n        INDEX idx_sent_at (sent_at),\r\n        FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,\r\n        FOREIGN KEY (subscription_id) REFERENCES subscriptions(id) ON DELETE CASCADE\r\n      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\r\n    `;\n        try {\n            await this.query(createUsersTable);\n            await this.query(createSubscriptionsTable);\n            await this.query(createUserPreferencesTable);\n            await this.query(createReminderLogsTable);\n            console.log(\"✅ Database tables initialized successfully\");\n        } catch (error) {\n            console.error(\"❌ Failed to initialize database tables:\", error);\n            throw error;\n        }\n    }\n}\n// Singleton instance\nconst databaseService = DatabaseService.getInstance();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/database/config.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/next-auth","vendor-chunks/@babel","vendor-chunks/mysql2","vendor-chunks/aws-ssl-profiles","vendor-chunks/iconv-lite","vendor-chunks/jose","vendor-chunks/openid-client","vendor-chunks/long","vendor-chunks/bcryptjs","vendor-chunks/named-placeholders","vendor-chunks/oauth","vendor-chunks/denque","vendor-chunks/preact","vendor-chunks/is-property","vendor-chunks/lru.min","vendor-chunks/yallist","vendor-chunks/preact-render-to-string","vendor-chunks/cookie","vendor-chunks/sqlstring","vendor-chunks/seq-queue","vendor-chunks/@panva","vendor-chunks/generate-function","vendor-chunks/oidc-token-hash","vendor-chunks/uuid","vendor-chunks/safer-buffer"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fuser%2Fstatus%2Froute&page=%2Fapi%2Fuser%2Fstatus%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fuser%2Fstatus%2Froute.ts&appDir=C%3A%5CUsers%5CGebruiker%5CDocuments%5CGitHub%5CI-hate-subscriptions%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CGebruiker%5CDocuments%5CGitHub%5CI-hate-subscriptions&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();